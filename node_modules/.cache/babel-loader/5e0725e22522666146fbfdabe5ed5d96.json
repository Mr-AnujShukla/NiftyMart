{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CID } from 'multiformats/cid';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n */\n\nexport var createPut = configure(function (api) {\n  /**\n   * @type {BlockAPI[\"put\"]}\n   */\n  function put(_x) {\n    return _put.apply(this, arguments);\n  }\n  function _put() {\n    _put = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data) {\n      var options,\n        controller,\n        signal,\n        res,\n        response,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              // allow aborting requests on body errors\n              controller = new AbortController();\n              signal = abortSignal(controller.signal, options.signal);\n              _context.prev = 3;\n              _context.t0 = api;\n              _context.t1 = _objectSpread;\n              _context.t2 = {\n                signal: signal,\n                searchParams: toUrlSearchParams(options)\n              };\n              _context.next = 9;\n              return multipartRequest([data], controller, options.headers);\n            case 9:\n              _context.t3 = _context.sent;\n              _context.t4 = (0, _context.t1)(_context.t2, _context.t3);\n              _context.next = 13;\n              return _context.t0.post.call(_context.t0, 'block/put', _context.t4);\n            case 13:\n              response = _context.sent;\n              _context.next = 16;\n              return response.json();\n            case 16:\n              res = _context.sent;\n              _context.next = 28;\n              break;\n            case 19:\n              _context.prev = 19;\n              _context.t5 = _context[\"catch\"](3);\n              if (!(options.format === 'dag-pb')) {\n                _context.next = 25;\n                break;\n              }\n              return _context.abrupt(\"return\", put(data, _objectSpread(_objectSpread({}, options), {}, {\n                format: 'protobuf'\n              })));\n            case 25:\n              if (!(options.format === 'dag-cbor')) {\n                _context.next = 27;\n                break;\n              }\n              return _context.abrupt(\"return\", put(data, _objectSpread(_objectSpread({}, options), {}, {\n                format: 'cbor'\n              })));\n            case 27:\n              throw _context.t5;\n            case 28:\n              return _context.abrupt(\"return\", CID.parse(res.Key));\n            case 29:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 19]]);\n    }));\n    return _put.apply(this, arguments);\n  }\n  return put;\n});","map":{"version":3,"names":["CID","multipartRequest","configure","toUrlSearchParams","abortSignal","createPut","api","put","data","options","controller","AbortController","signal","searchParams","headers","post","response","json","res","format","parse","Key"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/ipfs-http-client/src/block/put.js"],"sourcesContent":["import { CID } from 'multiformats/cid'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n */\n\nexport const createPut = configure(api => {\n  /**\n   * @type {BlockAPI[\"put\"]}\n   */\n  async function put (data, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    let res\n    try {\n      const response = await api.post('block/put', {\n        signal: signal,\n        searchParams: toUrlSearchParams(options),\n        ...(\n          await multipartRequest([data], controller, options.headers)\n        )\n      })\n      res = await response.json()\n    } catch (/** @type {any} */ err) {\n      // Retry with \"protobuf\"/\"cbor\" format for go-ipfs\n      // TODO: remove when https://github.com/ipfs/go-cid/issues/75 resolved\n      if (options.format === 'dag-pb') {\n        return put(data, { ...options, format: 'protobuf' })\n      } else if (options.format === 'dag-cbor') {\n        return put(data, { ...options, format: 'cbor' })\n      }\n\n      throw err\n    }\n\n    return CID.parse(res.Key)\n  }\n\n  return put\n})\n"],"mappings":";;;AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,WAAW,QAAQ,wBAAwB;;AAEpD;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,SAAS,GAAGH,SAAS,CAAC,UAAAI,GAAG,EAAI;EACxC;AACF;AACA;EAFE,SAGeC,GAAG;IAAA;EAAA;EAAA;IAAA,kEAAlB,iBAAoBC,IAAI;MAAA;QAAA;QAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cAAEC,OAAO,2DAAG,CAAC,CAAC;cACpC;cACMC,UAAU,GAAG,IAAIC,eAAe,EAAE;cAClCC,MAAM,GAAGR,WAAW,CAACM,UAAU,CAACE,MAAM,EAAEH,OAAO,CAACG,MAAM,CAAC;cAAA;cAAA,cAIpCN,GAAG;cAAA;cAAA;gBACxBM,MAAM,EAAEA,MAAM;gBACdC,YAAY,EAAEV,iBAAiB,CAACM,OAAO;cAAC;cAAA;cAAA,OAEhCR,gBAAgB,CAAC,CAACO,IAAI,CAAC,EAAEE,UAAU,EAAED,OAAO,CAACK,OAAO,CAAC;YAAA;cAAA;cAAA;cAAA;cAAA,mBAJpCC,IAAI,mBAAC,WAAW;YAAA;cAArCC,QAAQ;cAAA;cAAA,OAOFA,QAAQ,CAACC,IAAI,EAAE;YAAA;cAA3BC,GAAG;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA,MAICT,OAAO,CAACU,MAAM,KAAK,QAAQ;gBAAA;gBAAA;cAAA;cAAA,iCACtBZ,GAAG,CAACC,IAAI,kCAAOC,OAAO;gBAAEU,MAAM,EAAE;cAAU,GAAG;YAAA;cAAA,MAC3CV,OAAO,CAACU,MAAM,KAAK,UAAU;gBAAA;gBAAA;cAAA;cAAA,iCAC/BZ,GAAG,CAACC,IAAI,kCAAOC,OAAO;gBAAEU,MAAM,EAAE;cAAM,GAAG;YAAA;cAAA;YAAA;cAAA,iCAM7CnB,GAAG,CAACoB,KAAK,CAACF,GAAG,CAACG,GAAG,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAC1B;IAAA;EAAA;EAED,OAAOd,GAAG;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}