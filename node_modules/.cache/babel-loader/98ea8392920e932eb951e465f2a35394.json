{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _awaitAsyncGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _asyncIterator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\nexport var createAddAll = configure(function (api) {\n  /**\n   * @type {PinAPI[\"addAll\"]}\n   */\n  function addAll(_x) {\n    return _addAll.apply(this, arguments);\n  }\n  function _addAll() {\n    _addAll = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source) {\n      var options,\n        _iteratorAbruptCompletion,\n        _didIteratorError,\n        _iteratorError,\n        _iterator,\n        _step,\n        _step$value,\n        path,\n        recursive,\n        metadata,\n        res,\n        _iteratorAbruptCompletion2,\n        _didIteratorError2,\n        _iteratorError2,\n        _iterator2,\n        _step2,\n        pin,\n        _iterator3,\n        _step3,\n        cid,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 3;\n              _iterator = _asyncIterator(normaliseInput(source));\n            case 5:\n              _context.next = 7;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 7:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 63;\n                break;\n              }\n              _step$value = _step.value, path = _step$value.path, recursive = _step$value.recursive, metadata = _step$value.metadata;\n              _context.next = 11;\n              return _awaitAsyncGenerator(api.post('pin/add', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread(_objectSpread({}, options), {}, {\n                  arg: path,\n                  recursive: recursive,\n                  metadata: metadata ? JSON.stringify(metadata) : undefined,\n                  stream: true\n                })),\n                headers: options.headers\n              }));\n            case 11:\n              res = _context.sent;\n              _iteratorAbruptCompletion2 = false;\n              _didIteratorError2 = false;\n              _context.prev = 14;\n              _iterator2 = _asyncIterator(res.ndjson());\n            case 16:\n              _context.next = 18;\n              return _awaitAsyncGenerator(_iterator2.next());\n            case 18:\n              if (!(_iteratorAbruptCompletion2 = !(_step2 = _context.sent).done)) {\n                _context.next = 44;\n                break;\n              }\n              pin = _step2.value;\n              if (!pin.Pins) {\n                _context.next = 39;\n                break;\n              }\n              // non-streaming response\n              _iterator3 = _createForOfIteratorHelper(pin.Pins);\n              _context.prev = 22;\n              _iterator3.s();\n            case 24:\n              if ((_step3 = _iterator3.n()).done) {\n                _context.next = 30;\n                break;\n              }\n              cid = _step3.value;\n              _context.next = 28;\n              return CID.parse(cid);\n            case 28:\n              _context.next = 24;\n              break;\n            case 30:\n              _context.next = 35;\n              break;\n            case 32:\n              _context.prev = 32;\n              _context.t0 = _context[\"catch\"](22);\n              _iterator3.e(_context.t0);\n            case 35:\n              _context.prev = 35;\n              _iterator3.f();\n              return _context.finish(35);\n            case 38:\n              return _context.abrupt(\"continue\", 41);\n            case 39:\n              _context.next = 41;\n              return CID.parse(pin);\n            case 41:\n              _iteratorAbruptCompletion2 = false;\n              _context.next = 16;\n              break;\n            case 44:\n              _context.next = 50;\n              break;\n            case 46:\n              _context.prev = 46;\n              _context.t1 = _context[\"catch\"](14);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context.t1;\n            case 50:\n              _context.prev = 50;\n              _context.prev = 51;\n              if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n                _context.next = 55;\n                break;\n              }\n              _context.next = 55;\n              return _awaitAsyncGenerator(_iterator2.return());\n            case 55:\n              _context.prev = 55;\n              if (!_didIteratorError2) {\n                _context.next = 58;\n                break;\n              }\n              throw _iteratorError2;\n            case 58:\n              return _context.finish(55);\n            case 59:\n              return _context.finish(50);\n            case 60:\n              _iteratorAbruptCompletion = false;\n              _context.next = 5;\n              break;\n            case 63:\n              _context.next = 69;\n              break;\n            case 65:\n              _context.prev = 65;\n              _context.t2 = _context[\"catch\"](3);\n              _didIteratorError = true;\n              _iteratorError = _context.t2;\n            case 69:\n              _context.prev = 69;\n              _context.prev = 70;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 74;\n                break;\n              }\n              _context.next = 74;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 74:\n              _context.prev = 74;\n              if (!_didIteratorError) {\n                _context.next = 77;\n                break;\n              }\n              throw _iteratorError;\n            case 77:\n              return _context.finish(74);\n            case 78:\n              return _context.finish(69);\n            case 79:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 65, 69, 79], [14, 46, 50, 60], [22, 32, 35, 38], [51,, 55, 59], [70,, 74, 78]]);\n    }));\n    return _addAll.apply(this, arguments);\n  }\n  return addAll;\n});","map":{"version":3,"names":["CID","configure","normaliseInput","toUrlSearchParams","createAddAll","api","addAll","source","options","path","recursive","metadata","post","signal","searchParams","arg","JSON","stringify","undefined","stream","headers","res","ndjson","pin","Pins","cid","parse"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/ipfs-http-client/src/pin/add-all.js"],"sourcesContent":["import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\nexport const createAddAll = configure(api => {\n  /**\n   * @type {PinAPI[\"addAll\"]}\n   */\n  async function * addAll (source, options = {}) {\n    for await (const { path, recursive, metadata } of normaliseInput(source)) {\n      const res = await api.post('pin/add', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          ...options,\n          arg: path,\n          recursive,\n          metadata: metadata ? JSON.stringify(metadata) : undefined,\n          stream: true\n        }),\n        headers: options.headers\n      })\n\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) { // non-streaming response\n          for (const cid of pin.Pins) {\n            yield CID.parse(cid)\n          }\n          continue\n        }\n\n        yield CID.parse(pin)\n      }\n    }\n  }\n  return addAll\n})\n"],"mappings":";;;;;;AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,cAAc,QAAQ,sCAAsC;AACrE,SAASC,iBAAiB,QAAQ,gCAAgC;;AAElE;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,YAAY,GAAGH,SAAS,CAAC,UAAAI,GAAG,EAAI;EAC3C;AACF;AACA;EAFE,SAGiBC,MAAM;IAAA;EAAA;EAAA;IAAA,uEAAvB,iBAAyBC,MAAM;MAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cAAEC,OAAO,2DAAG,CAAC,CAAC;cAAA;cAAA;cAAA;cAAA,2BACON,cAAc,CAACK,MAAM,CAAC;YAAA;cAAA;cAAA;YAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA,2BAArDE,IAAI,eAAJA,IAAI,EAAEC,SAAS,eAATA,SAAS,EAAEC,QAAQ,eAARA,QAAQ;cAAA;cAAA,4BACxBN,GAAG,CAACO,IAAI,CAAC,SAAS,EAAE;gBACpCC,MAAM,EAAEL,OAAO,CAACK,MAAM;gBACtBC,YAAY,EAAEX,iBAAiB,iCAC1BK,OAAO;kBACVO,GAAG,EAAEN,IAAI;kBACTC,SAAS,EAATA,SAAS;kBACTC,QAAQ,EAAEA,QAAQ,GAAGK,IAAI,CAACC,SAAS,CAACN,QAAQ,CAAC,GAAGO,SAAS;kBACzDC,MAAM,EAAE;gBAAI,GACZ;gBACFC,OAAO,EAAEZ,OAAO,CAACY;cACnB,CAAC,CAAC;YAAA;cAVIC,GAAG;cAAA;cAAA;cAAA;cAAA,4BAYeA,GAAG,CAACC,MAAM,EAAE;YAAA;cAAA;cAAA;YAAA;cAAA;gBAAA;gBAAA;cAAA;cAAnBC,GAAG;cAAA,KACdA,GAAG,CAACC,IAAI;gBAAA;gBAAA;cAAA;cAAI;cAAA,wCACID,GAAG,CAACC,IAAI;cAAA;cAAA;YAAA;cAAA;gBAAA;gBAAA;cAAA;cAAfC,GAAG;cAAA;cACZ,OAAMzB,GAAG,CAAC0B,KAAK,CAACD,GAAG,CAAC;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;cAAA;YAAA;cAAA;cAKxB,OAAMzB,GAAG,CAAC0B,KAAK,CAACH,GAAG,CAAC;YAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;YAAA;cAAA;YAAA;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;YAAA;cAAA;YAAA;cAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAGzB;IAAA;EAAA;EACD,OAAOjB,MAAM;AACf,CAAC,CAAC"},"metadata":{},"sourceType":"module"}