{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport var createChmod = configure(function (api) {\n  /**\n   * @type {FilesAPI[\"chmod\"]}\n   */\n  function chmod(_x, _x2) {\n    return _chmod.apply(this, arguments);\n  }\n  function _chmod() {\n    _chmod = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(path, mode) {\n      var options,\n        res,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n              _context.next = 3;\n              return api.post('files/chmod', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: path,\n                  mode: mode\n                }, options)),\n                headers: options.headers\n              });\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.text();\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _chmod.apply(this, arguments);\n  }\n  return chmod;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","createChmod","api","chmod","path","mode","options","post","signal","searchParams","arg","headers","res","text"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/ipfs-http-client/src/files/chmod.js"],"sourcesContent":["import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createChmod = configure(api => {\n  /**\n   * @type {FilesAPI[\"chmod\"]}\n   */\n  async function chmod (path, mode, options = {}) {\n    const res = await api.post('files/chmod', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        mode,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return chmod\n})\n"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;;AAElE;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,WAAW,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;EAC1C;AACF;AACA;EAFE,SAGeC,KAAK;IAAA;EAAA;EAAA;IAAA,oEAApB,iBAAsBC,IAAI,EAAEC,IAAI;MAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cAAEC,OAAO,2DAAG,CAAC,CAAC;cAAA;cAAA,OAC1BJ,GAAG,CAACK,IAAI,CAAC,aAAa,EAAE;gBACxCC,MAAM,EAAEF,OAAO,CAACE,MAAM;gBACtBC,YAAY,EAAET,iBAAiB;kBAC7BU,GAAG,EAAEN,IAAI;kBACTC,IAAI,EAAJA;gBAAI,GACDC,OAAO,EACV;gBACFK,OAAO,EAAEL,OAAO,CAACK;cACnB,CAAC,CAAC;YAAA;cARIC,GAAG;cAAA;cAAA,OAUHA,GAAG,CAACC,IAAI,EAAE;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACjB;IAAA;EAAA;EACD,OAAOV,KAAK;AACd,CAAC,CAAC"},"metadata":{},"sourceType":"module"}