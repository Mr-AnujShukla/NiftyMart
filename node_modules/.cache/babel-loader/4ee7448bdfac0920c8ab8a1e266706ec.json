{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { toUrlSearchParams } from '../../../lib/to-url-search-params.js';\n\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\nexport function createRm(client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"rm\"]}\n   */\n  function rm(_x) {\n    return _rm.apply(this, arguments);\n  }\n  function _rm() {\n    _rm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(name) {\n      var options,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return client.post('pin/remote/service/rm', {\n                signal: options.signal,\n                headers: options.headers,\n                searchParams: toUrlSearchParams({\n                  arg: name\n                })\n              });\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _rm.apply(this, arguments);\n  }\n  return rm;\n}","map":{"version":3,"names":["toUrlSearchParams","createRm","client","rm","name","options","post","signal","headers","searchParams","arg"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/ipfs-http-client/src/pin/remote/service/rm.js"],"sourcesContent":["import { toUrlSearchParams } from '../../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\nexport function createRm (client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"rm\"]}\n   */\n  async function rm (name, options = {}) {\n    await client.post('pin/remote/service/rm', {\n      signal: options.signal,\n      headers: options.headers,\n      searchParams: toUrlSearchParams({\n        arg: name\n      })\n    })\n  }\n\n  return rm\n}\n"],"mappings":";;AAAA,SAASA,iBAAiB,QAAQ,sCAAsC;;AAExE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,SAASC,QAAQ,CAAEC,MAAM,EAAE;EAChC;AACF;AACA;EAFE,SAGeC,EAAE;IAAA;EAAA;EAAA;IAAA,iEAAjB,iBAAmBC,IAAI;MAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cAAEC,OAAO,2DAAG,CAAC,CAAC;cAAA;cAAA,OAC7BH,MAAM,CAACI,IAAI,CAAC,uBAAuB,EAAE;gBACzCC,MAAM,EAAEF,OAAO,CAACE,MAAM;gBACtBC,OAAO,EAAEH,OAAO,CAACG,OAAO;gBACxBC,YAAY,EAAET,iBAAiB,CAAC;kBAC9BU,GAAG,EAAEN;gBACP,CAAC;cACH,CAAC,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACH;IAAA;EAAA;EAED,OAAOD,EAAE;AACX"},"metadata":{},"sourceType":"module"}