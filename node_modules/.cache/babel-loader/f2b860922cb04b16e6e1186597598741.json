{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport var createImport = configure(function (api) {\n  /**\n   * @type {KeyAPI[\"import\"]}\n   */\n  function importKey(_x, _x2, _x3) {\n    return _importKey.apply(this, arguments);\n  }\n  function _importKey() {\n    _importKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(name, pem, password) {\n      var options,\n        res,\n        data,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};\n              _context.next = 3;\n              return api.post('key/import', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: name,\n                  pem: pem,\n                  password: password\n                }, options)),\n                headers: options.headers\n              });\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n            case 6:\n              data = _context.sent;\n              return _context.abrupt(\"return\", objectToCamel(data));\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _importKey.apply(this, arguments);\n  }\n  return importKey;\n});","map":{"version":3,"names":["objectToCamel","configure","toUrlSearchParams","createImport","api","importKey","name","pem","password","options","post","signal","searchParams","arg","headers","res","json","data"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/ipfs-http-client/src/key/import.js"],"sourcesContent":["import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createImport = configure(api => {\n  /**\n   * @type {KeyAPI[\"import\"]}\n   */\n  async function importKey (name, pem, password, options = {}) {\n    const res = await api.post('key/import', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        pem,\n        password,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(data)\n  }\n  return importKey\n})\n"],"mappings":";;;AAAA,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;;AAElE;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,YAAY,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;EAC3C;AACF;AACA;EAFE,SAGeC,SAAS;IAAA;EAAA;EAAA;IAAA,wEAAxB,iBAA0BC,IAAI,EAAEC,GAAG,EAAEC,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cAAEC,OAAO,2DAAG,CAAC,CAAC;cAAA;cAAA,OACvCL,GAAG,CAACM,IAAI,CAAC,YAAY,EAAE;gBACvCC,MAAM,EAAEF,OAAO,CAACE,MAAM;gBACtBC,YAAY,EAAEV,iBAAiB;kBAC7BW,GAAG,EAAEP,IAAI;kBACTC,GAAG,EAAHA,GAAG;kBACHC,QAAQ,EAARA;gBAAQ,GACLC,OAAO,EACV;gBACFK,OAAO,EAAEL,OAAO,CAACK;cACnB,CAAC,CAAC;YAAA;cATIC,GAAG;cAAA;cAAA,OAUUA,GAAG,CAACC,IAAI,EAAE;YAAA;cAAvBC,IAAI;cAAA,iCAGHjB,aAAa,CAACiB,IAAI,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAC3B;IAAA;EAAA;EACD,OAAOZ,SAAS;AAClB,CAAC,CAAC"},"metadata":{},"sourceType":"module"}