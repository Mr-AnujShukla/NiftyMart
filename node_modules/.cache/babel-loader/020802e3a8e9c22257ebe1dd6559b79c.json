{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport var createMv = configure(function (api) {\n  /**\n   * @type {FilesAPI[\"mv\"]}\n   */\n  function mv(_x, _x2) {\n    return _mv.apply(this, arguments);\n  }\n  function _mv() {\n    _mv = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(sources, destination) {\n      var options,\n        res,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n              if (!Array.isArray(sources)) {\n                sources = [sources];\n              }\n              _context.next = 4;\n              return api.post('files/mv', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: sources.concat(destination)\n                }, options)),\n                headers: options.headers\n              });\n            case 4:\n              res = _context.sent;\n              _context.next = 7;\n              return res.text();\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _mv.apply(this, arguments);\n  }\n  return mv;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","createMv","api","mv","sources","destination","options","Array","isArray","post","signal","searchParams","arg","concat","headers","res","text"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/ipfs-http-client/src/files/mv.js"],"sourcesContent":["import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createMv = configure(api => {\n  /**\n   * @type {FilesAPI[\"mv\"]}\n   */\n  async function mv (sources, destination, options = {}) {\n    if (!Array.isArray(sources)) {\n      sources = [sources]\n    }\n\n    const res = await api.post('files/mv', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sources.concat(destination),\n        ...options\n      }),\n      headers: options.headers\n    })\n    await res.text()\n  }\n\n  return mv\n})\n"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;;AAElE;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,QAAQ,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;EACvC;AACF;AACA;EAFE,SAGeC,EAAE;IAAA;EAAA;EAAA;IAAA,iEAAjB,iBAAmBC,OAAO,EAAEC,WAAW;MAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cAAEC,OAAO,2DAAG,CAAC,CAAC;cACnD,IAAI,CAACC,KAAK,CAACC,OAAO,CAACJ,OAAO,CAAC,EAAE;gBAC3BA,OAAO,GAAG,CAACA,OAAO,CAAC;cACrB;cAAC;cAAA,OAEiBF,GAAG,CAACO,IAAI,CAAC,UAAU,EAAE;gBACrCC,MAAM,EAAEJ,OAAO,CAACI,MAAM;gBACtBC,YAAY,EAAEX,iBAAiB;kBAC7BY,GAAG,EAAER,OAAO,CAACS,MAAM,CAACR,WAAW;gBAAC,GAC7BC,OAAO,EACV;gBACFQ,OAAO,EAAER,OAAO,CAACQ;cACnB,CAAC,CAAC;YAAA;cAPIC,GAAG;cAAA;cAAA,OAQHA,GAAG,CAACC,IAAI,EAAE;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACjB;IAAA;EAAA;EAED,OAAOb,EAAE;AACX,CAAC,CAAC"},"metadata":{},"sourceType":"module"}