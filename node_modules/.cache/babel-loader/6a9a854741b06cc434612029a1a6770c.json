{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _awaitAsyncGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _asyncIterator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { abortSignal } from '../lib/abort-signal.js';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { mapEvent } from './map-event.js';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport var createPut = configure(function (api) {\n  /**\n   * @type {DHTAPI[\"put\"]}\n   */\n  function put(_x, _x2) {\n    return _put.apply(this, arguments);\n  }\n  function _put() {\n    _put = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(key, value) {\n      var options,\n        controller,\n        signal,\n        res,\n        _iteratorAbruptCompletion,\n        _didIteratorError,\n        _iteratorError,\n        _iterator,\n        _step,\n        event,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n              // allow aborting requests on body errors\n              controller = new AbortController();\n              signal = abortSignal(controller.signal, options.signal);\n              _context.t0 = _awaitAsyncGenerator;\n              _context.t1 = api;\n              _context.t2 = _objectSpread;\n              _context.t3 = {\n                signal: signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key.toString()\n                }, options))\n              };\n              _context.next = 9;\n              return _awaitAsyncGenerator(multipartRequest([value], controller, options.headers));\n            case 9:\n              _context.t4 = _context.sent;\n              _context.t5 = (0, _context.t2)(_context.t3, _context.t4);\n              _context.t6 = _context.t1.post.call(_context.t1, 'dht/put', _context.t5);\n              _context.next = 14;\n              return (0, _context.t0)(_context.t6);\n            case 14:\n              res = _context.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 17;\n              _iterator = _asyncIterator(res.ndjson());\n            case 19:\n              _context.next = 21;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 21:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 28;\n                break;\n              }\n              event = _step.value;\n              _context.next = 25;\n              return mapEvent(event);\n            case 25:\n              _iteratorAbruptCompletion = false;\n              _context.next = 19;\n              break;\n            case 28:\n              _context.next = 34;\n              break;\n            case 30:\n              _context.prev = 30;\n              _context.t7 = _context[\"catch\"](17);\n              _didIteratorError = true;\n              _iteratorError = _context.t7;\n            case 34:\n              _context.prev = 34;\n              _context.prev = 35;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 39;\n                break;\n              }\n              _context.next = 39;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 39:\n              _context.prev = 39;\n              if (!_didIteratorError) {\n                _context.next = 42;\n                break;\n              }\n              throw _iteratorError;\n            case 42:\n              return _context.finish(39);\n            case 43:\n              return _context.finish(34);\n            case 44:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[17, 30, 34, 44], [35,, 39, 43]]);\n    }));\n    return _put.apply(this, arguments);\n  }\n  return put;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","multipartRequest","abortSignal","toString","uint8ArrayToString","mapEvent","createPut","api","put","key","value","options","controller","AbortController","signal","searchParams","arg","Uint8Array","headers","post","res","ndjson","event"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/ipfs-http-client/src/dht/put.js"],"sourcesContent":["import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { abortSignal } from '../lib/abort-signal.js'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createPut = configure(api => {\n  /**\n   * @type {DHTAPI[\"put\"]}\n   */\n  async function * put (key, value, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('dht/put', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key.toString(),\n        ...options\n      }),\n      ...(\n        await multipartRequest([value], controller, options.headers)\n      )\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return put\n})\n"],"mappings":";;;;;AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,QAAQ,IAAIC,kBAAkB,QAAQ,uBAAuB;AACtE,SAASC,QAAQ,QAAQ,gBAAgB;;AAEzC;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,SAAS,GAAGP,SAAS,CAAC,UAAAQ,GAAG,EAAI;EACxC;AACF;AACA;EAFE,SAGiBC,GAAG;IAAA;EAAA;EAAA;IAAA,oEAApB,iBAAsBC,GAAG,EAAEC,KAAK;MAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cAAEC,OAAO,2DAAG,CAAC,CAAC;cAC5C;cACMC,UAAU,GAAG,IAAIC,eAAe,EAAE;cAClCC,MAAM,GAAGZ,WAAW,CAACU,UAAU,CAACE,MAAM,EAAEH,OAAO,CAACG,MAAM,CAAC;cAAA;cAAA,cAE3CP,GAAG;cAAA;cAAA;gBACnBO,MAAM,EAANA,MAAM;gBACNC,YAAY,EAAEf,iBAAiB;kBAC7BgB,GAAG,EAAEP,GAAG,YAAYQ,UAAU,GAAGb,kBAAkB,CAACK,GAAG,CAAC,GAAGA,GAAG,CAACN,QAAQ;gBAAE,GACtEQ,OAAO;cACV;cAAA;cAAA,4BAEMV,gBAAgB,CAAC,CAACS,KAAK,CAAC,EAAEE,UAAU,EAAED,OAAO,CAACO,OAAO,CAAC;YAAA;cAAA;cAAA;cAAA,0BAP1CC,IAAI,mBAAC,SAAS;cAAA;cAAA;YAAA;cAA9BC,GAAG;cAAA;cAAA;cAAA;cAAA,2BAWiBA,GAAG,CAACC,MAAM,EAAE;YAAA;cAAA;cAAA;YAAA;cAAA;gBAAA;gBAAA;cAAA;cAArBC,KAAK;cAAA;cACpB,OAAMjB,QAAQ,CAACiB,KAAK,CAAC;YAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;YAAA;cAAA;YAAA;cAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAExB;IAAA;EAAA;EAED,OAAOd,GAAG;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}