{"ast":null,"code":"/* eslint-disable no-undef */\n'use strict';\n\nvar _defineProperty = require(\"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _regeneratorRuntime = require(\"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _objectSpread = require(\"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _wrapAsyncGenerator = require(\"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\nvar _awaitAsyncGenerator = require(\"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\nvar _asyncGeneratorDelegate = require(\"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate.js\").default;\nvar _asyncIterator = require(\"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\nvar _require = require('./http/fetch'),\n  _fetch = _require.fetch,\n  Request = _require.Request,\n  Headers = _require.Headers;\nvar _require2 = require('./http/error'),\n  TimeoutError = _require2.TimeoutError,\n  HTTPError = _require2.HTTPError;\nvar merge = require('merge-options').bind({\n  ignoreUndefined: true\n});\nvar _require3 = require('iso-url'),\n  URL = _require3.URL,\n  URLSearchParams = _require3.URLSearchParams;\nvar anySignal = require('any-signal');\n\n/**\n * @typedef {import('stream').Readable} NodeReadableStream\n * @typedef {import('./types').HTTPOptions} HTTPOptions\n * @typedef {import('./types').ExtendedResponse} ExtendedResponse\n */\n\n/**\n * @template TResponse\n * @param {Promise<TResponse>} promise\n * @param {number | undefined} ms\n * @param {AbortController} abortController\n * @returns {Promise<TResponse>}\n */\nvar timeout = function timeout(promise, ms, abortController) {\n  if (ms === undefined) {\n    return promise;\n  }\n  var start = Date.now();\n  var timedOut = function timedOut() {\n    var time = Date.now() - start;\n    return time >= ms;\n  };\n  return new Promise(function (resolve, reject) {\n    var timeoutID = setTimeout(function () {\n      if (timedOut()) {\n        reject(new TimeoutError());\n        abortController.abort();\n      }\n    }, ms);\n\n    /**\n     * @param {(value: any) => void } next\n     */\n    var after = function after(next) {\n      /**\n       * @param {any} res\n       */\n      var fn = function fn(res) {\n        clearTimeout(timeoutID);\n        if (timedOut()) {\n          reject(new TimeoutError());\n          return;\n        }\n        next(res);\n      };\n      return fn;\n    };\n    promise.then(after(resolve), after(reject));\n  });\n};\nvar defaults = {\n  throwHttpErrors: true,\n  credentials: 'same-origin'\n};\nvar HTTP = /*#__PURE__*/function () {\n  /**\n   *\n   * @param {HTTPOptions} options\n   */\n  function HTTP() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, HTTP);\n    /** @type {HTTPOptions} */\n    this.opts = merge(defaults, options);\n  }\n\n  /**\n   * Fetch\n   *\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   * @returns {Promise<ExtendedResponse>}\n   */\n  _createClass(HTTP, [{\n    key: \"fetch\",\n    value: function () {\n      var _fetch2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(resource) {\n        var options,\n          opts,\n          headers,\n          url,\n          searchParams,\n          transformSearchParams,\n          json,\n          abortController,\n          signal,\n          response,\n          _args3 = arguments;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                options = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n                /** @type {HTTPOptions} */\n                opts = merge(this.opts, options); // @ts-expect-error\n                headers = new Headers(opts.headers); // validate resource type\n                // @ts-expect-error\n                if (!(typeof resource !== 'string' && !(resource instanceof URL || resource instanceof Request))) {\n                  _context3.next = 5;\n                  break;\n                }\n                throw new TypeError('`resource` must be a string, URL, or Request');\n              case 5:\n                url = new URL(resource.toString(), opts.base);\n                searchParams = opts.searchParams, transformSearchParams = opts.transformSearchParams, json = opts.json;\n                if (searchParams) {\n                  if (typeof transformSearchParams === 'function') {\n                    // @ts-ignore\n                    url.search = transformSearchParams(new URLSearchParams(opts.searchParams));\n                  } else {\n                    // @ts-ignore\n                    url.search = new URLSearchParams(opts.searchParams);\n                  }\n                }\n                if (json) {\n                  opts.body = JSON.stringify(opts.json);\n                  headers.set('content-type', 'application/json');\n                }\n                abortController = new AbortController(); // @ts-ignore\n                signal = anySignal([abortController.signal, opts.signal]);\n                /** @type {ExtendedResponse} */\n                // @ts-expect-error additional fields are assigned below\n                _context3.next = 13;\n                return timeout(_fetch(url.toString(), _objectSpread(_objectSpread({}, opts), {}, {\n                  signal: signal,\n                  // @ts-expect-error non-browser fetch implementations may take extra options\n                  timeout: undefined,\n                  headers: headers\n                })), opts.timeout, abortController);\n              case 13:\n                response = _context3.sent;\n                if (!(!response.ok && opts.throwHttpErrors)) {\n                  _context3.next = 19;\n                  break;\n                }\n                if (!opts.handleError) {\n                  _context3.next = 18;\n                  break;\n                }\n                _context3.next = 18;\n                return opts.handleError(response);\n              case 18:\n                throw new HTTPError(response);\n              case 19:\n                response.iterator = /*#__PURE__*/_wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                  return _regeneratorRuntime().wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(fromStream(response.body)), _awaitAsyncGenerator), \"t0\", 1);\n                        case 1:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n                response.ndjson = /*#__PURE__*/_wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n                  var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk;\n                  return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          _iteratorAbruptCompletion = false;\n                          _didIteratorError = false;\n                          _context2.prev = 2;\n                          _iterator = _asyncIterator(ndjson(response.iterator()));\n                        case 4:\n                          _context2.next = 6;\n                          return _awaitAsyncGenerator(_iterator.next());\n                        case 6:\n                          if (!(_iteratorAbruptCompletion = !(_step = _context2.sent).done)) {\n                            _context2.next = 18;\n                            break;\n                          }\n                          chunk = _step.value;\n                          if (!options.transform) {\n                            _context2.next = 13;\n                            break;\n                          }\n                          _context2.next = 11;\n                          return options.transform(chunk);\n                        case 11:\n                          _context2.next = 15;\n                          break;\n                        case 13:\n                          _context2.next = 15;\n                          return chunk;\n                        case 15:\n                          _iteratorAbruptCompletion = false;\n                          _context2.next = 4;\n                          break;\n                        case 18:\n                          _context2.next = 24;\n                          break;\n                        case 20:\n                          _context2.prev = 20;\n                          _context2.t0 = _context2[\"catch\"](2);\n                          _didIteratorError = true;\n                          _iteratorError = _context2.t0;\n                        case 24:\n                          _context2.prev = 24;\n                          _context2.prev = 25;\n                          if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                            _context2.next = 29;\n                            break;\n                          }\n                          _context2.next = 29;\n                          return _awaitAsyncGenerator(_iterator.return());\n                        case 29:\n                          _context2.prev = 29;\n                          if (!_didIteratorError) {\n                            _context2.next = 32;\n                            break;\n                          }\n                          throw _iteratorError;\n                        case 32:\n                          return _context2.finish(29);\n                        case 33:\n                          return _context2.finish(24);\n                        case 34:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2, null, [[2, 20, 24, 34], [25,, 29, 33]]);\n                }));\n                return _context3.abrupt(\"return\", response);\n              case 22:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function fetch(_x2) {\n        return _fetch2.apply(this, arguments);\n      }\n      return fetch;\n    }()\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n  }, {\n    key: \"post\",\n    value: function post(resource) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.fetch(resource, _objectSpread(_objectSpread({}, options), {}, {\n        method: 'POST'\n      }));\n    }\n\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n  }, {\n    key: \"get\",\n    value: function get(resource) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.fetch(resource, _objectSpread(_objectSpread({}, options), {}, {\n        method: 'GET'\n      }));\n    }\n\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n  }, {\n    key: \"put\",\n    value: function put(resource) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.fetch(resource, _objectSpread(_objectSpread({}, options), {}, {\n        method: 'PUT'\n      }));\n    }\n\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n  }, {\n    key: \"delete\",\n    value: function _delete(resource) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.fetch(resource, _objectSpread(_objectSpread({}, options), {}, {\n        method: 'DELETE'\n      }));\n    }\n\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n  }, {\n    key: \"options\",\n    value: function options(resource) {\n      var _options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.fetch(resource, _objectSpread(_objectSpread({}, _options), {}, {\n        method: 'OPTIONS'\n      }));\n    }\n  }]);\n  return HTTP;\n}();\n/**\n * Parses NDJSON chunks from an iterator\n *\n * @param {AsyncIterable<Uint8Array>} source\n * @returns {AsyncIterable<any>}\n */\nvar ndjson = /*#__PURE__*/function () {\n  var _ref3 = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(source) {\n    var decoder, buf, _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, chunk, lines, i, l;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            decoder = new TextDecoder();\n            buf = '';\n            _iteratorAbruptCompletion2 = false;\n            _didIteratorError2 = false;\n            _context4.prev = 4;\n            _iterator2 = _asyncIterator(source);\n          case 6:\n            _context4.next = 8;\n            return _awaitAsyncGenerator(_iterator2.next());\n          case 8:\n            if (!(_iteratorAbruptCompletion2 = !(_step2 = _context4.sent).done)) {\n              _context4.next = 25;\n              break;\n            }\n            chunk = _step2.value;\n            buf += decoder.decode(chunk, {\n              stream: true\n            });\n            lines = buf.split(/\\r?\\n/);\n            i = 0;\n          case 13:\n            if (!(i < lines.length - 1)) {\n              _context4.next = 21;\n              break;\n            }\n            l = lines[i].trim();\n            if (!(l.length > 0)) {\n              _context4.next = 18;\n              break;\n            }\n            _context4.next = 18;\n            return JSON.parse(l);\n          case 18:\n            i++;\n            _context4.next = 13;\n            break;\n          case 21:\n            buf = lines[lines.length - 1];\n          case 22:\n            _iteratorAbruptCompletion2 = false;\n            _context4.next = 6;\n            break;\n          case 25:\n            _context4.next = 31;\n            break;\n          case 27:\n            _context4.prev = 27;\n            _context4.t0 = _context4[\"catch\"](4);\n            _didIteratorError2 = true;\n            _iteratorError2 = _context4.t0;\n          case 31:\n            _context4.prev = 31;\n            _context4.prev = 32;\n            if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n              _context4.next = 36;\n              break;\n            }\n            _context4.next = 36;\n            return _awaitAsyncGenerator(_iterator2.return());\n          case 36:\n            _context4.prev = 36;\n            if (!_didIteratorError2) {\n              _context4.next = 39;\n              break;\n            }\n            throw _iteratorError2;\n          case 39:\n            return _context4.finish(36);\n          case 40:\n            return _context4.finish(31);\n          case 41:\n            buf += decoder.decode();\n            buf = buf.trim();\n            if (!(buf.length !== 0)) {\n              _context4.next = 46;\n              break;\n            }\n            _context4.next = 46;\n            return JSON.parse(buf);\n          case 46:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[4, 27, 31, 41], [32,, 36, 40]]);\n  }));\n  return function ndjson(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\n/**\n * Stream to AsyncIterable\n *\n * @template TChunk\n * @param {ReadableStream<TChunk> | NodeReadableStream | null} source\n * @returns {AsyncIterable<TChunk>}\n */\nvar fromStream = function fromStream(source) {\n  // Workaround for https://github.com/node-fetch/node-fetch/issues/766\n  if (isNodeReadableStream(source)) {\n    var iter = source[Symbol.asyncIterator]();\n    return _defineProperty({}, Symbol.asyncIterator, function () {\n      return {\n        next: iter.next.bind(iter),\n        return: function _return(value) {\n          source.destroy();\n          if (typeof iter.return === 'function') {\n            return iter.return();\n          }\n          return Promise.resolve({\n            done: true,\n            value: value\n          });\n        }\n      };\n    });\n  }\n  if (isWebReadableStream(source)) {\n    var reader = source.getReader();\n    return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var _yield$_awaitAsyncGen, done, value;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n            case 1:\n              if (!true) {\n                _context5.next = 14;\n                break;\n              }\n              _context5.next = 4;\n              return _awaitAsyncGenerator(reader.read());\n            case 4:\n              _yield$_awaitAsyncGen = _context5.sent;\n              done = _yield$_awaitAsyncGen.done;\n              value = _yield$_awaitAsyncGen.value;\n              if (!done) {\n                _context5.next = 9;\n                break;\n              }\n              return _context5.abrupt(\"return\");\n            case 9:\n              if (!value) {\n                _context5.next = 12;\n                break;\n              }\n              _context5.next = 12;\n              return value;\n            case 12:\n              _context5.next = 1;\n              break;\n            case 14:\n              _context5.prev = 14;\n              reader.releaseLock();\n              return _context5.finish(14);\n            case 17:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0,, 14, 17]]);\n    }))();\n  }\n  if (isAsyncIterable(source)) {\n    return source;\n  }\n  throw new TypeError('Body can\\'t be converted to AsyncIterable');\n};\n\n/**\n * Check if it's an AsyncIterable\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|AsyncIterable<TChunk>} value\n * @returns {value is AsyncIterable<TChunk>}\n */\nvar isAsyncIterable = function isAsyncIterable(value) {\n  return typeof value === 'object' && value !== null && typeof /** @type {any} */value[Symbol.asyncIterator] === 'function';\n};\n\n/**\n * Check for web readable stream\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|ReadableStream<TChunk>} value\n * @returns {value is ReadableStream<TChunk>}\n */\nvar isWebReadableStream = function isWebReadableStream(value) {\n  return value && typeof /** @type {any} */value.getReader === 'function';\n};\n\n/**\n * @param {any} value\n * @returns {value is NodeReadableStream}\n */\nvar isNodeReadableStream = function isNodeReadableStream(value) {\n  return Object.prototype.hasOwnProperty.call(value, 'readable') && Object.prototype.hasOwnProperty.call(value, 'writable');\n};\nHTTP.HTTPError = HTTPError;\nHTTP.TimeoutError = TimeoutError;\nHTTP.streamToAsyncIterator = fromStream;\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.post = function (resource, options) {\n  return new HTTP(options).post(resource, options);\n};\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.get = function (resource, options) {\n  return new HTTP(options).get(resource, options);\n};\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.put = function (resource, options) {\n  return new HTTP(options).put(resource, options);\n};\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.delete = function (resource, options) {\n  return new HTTP(options).delete(resource, options);\n};\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.options = function (resource, options) {\n  return new HTTP(options).options(resource, options);\n};\nmodule.exports = HTTP;","map":{"version":3,"names":["require","fetch","Request","Headers","TimeoutError","HTTPError","merge","bind","ignoreUndefined","URL","URLSearchParams","anySignal","timeout","promise","ms","abortController","undefined","start","Date","now","timedOut","time","Promise","resolve","reject","timeoutID","setTimeout","abort","after","next","fn","res","clearTimeout","then","defaults","throwHttpErrors","credentials","HTTP","options","opts","resource","headers","TypeError","url","toString","base","searchParams","transformSearchParams","json","search","body","JSON","stringify","set","AbortController","signal","response","ok","handleError","iterator","fromStream","ndjson","chunk","transform","method","source","decoder","TextDecoder","buf","decode","stream","lines","split","i","length","l","trim","parse","isNodeReadableStream","iter","Symbol","asyncIterator","return","value","destroy","done","isWebReadableStream","reader","getReader","read","releaseLock","isAsyncIterable","Object","prototype","hasOwnProperty","call","streamToAsyncIterator","post","get","put","delete","module","exports"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/ipfs-utils/src/http.js"],"sourcesContent":["/* eslint-disable no-undef */\n'use strict'\n\nconst { fetch, Request, Headers } = require('./http/fetch')\nconst { TimeoutError, HTTPError } = require('./http/error')\nconst merge = require('merge-options').bind({ ignoreUndefined: true })\nconst { URL, URLSearchParams } = require('iso-url')\nconst anySignal = require('any-signal')\n\n/**\n * @typedef {import('stream').Readable} NodeReadableStream\n * @typedef {import('./types').HTTPOptions} HTTPOptions\n * @typedef {import('./types').ExtendedResponse} ExtendedResponse\n */\n\n/**\n * @template TResponse\n * @param {Promise<TResponse>} promise\n * @param {number | undefined} ms\n * @param {AbortController} abortController\n * @returns {Promise<TResponse>}\n */\nconst timeout = (promise, ms, abortController) => {\n  if (ms === undefined) {\n    return promise\n  }\n\n  const start = Date.now()\n\n  const timedOut = () => {\n    const time = Date.now() - start\n\n    return time >= ms\n  }\n\n  return new Promise((resolve, reject) => {\n    const timeoutID = setTimeout(() => {\n      if (timedOut()) {\n        reject(new TimeoutError())\n        abortController.abort()\n      }\n    }, ms)\n\n    /**\n     * @param {(value: any) => void } next\n     */\n    const after = (next) => {\n      /**\n       * @param {any} res\n       */\n      const fn = (res) => {\n        clearTimeout(timeoutID)\n\n        if (timedOut()) {\n          reject(new TimeoutError())\n          return\n        }\n\n        next(res)\n      }\n      return fn\n    }\n\n    promise\n      .then(after(resolve), after(reject))\n  })\n}\n\nconst defaults = {\n  throwHttpErrors: true,\n  credentials: 'same-origin'\n}\n\nclass HTTP {\n  /**\n   *\n   * @param {HTTPOptions} options\n   */\n  constructor (options = {}) {\n    /** @type {HTTPOptions} */\n    this.opts = merge(defaults, options)\n  }\n\n  /**\n   * Fetch\n   *\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   * @returns {Promise<ExtendedResponse>}\n   */\n  async fetch (resource, options = {}) {\n    /** @type {HTTPOptions} */\n    const opts = merge(this.opts, options)\n    // @ts-expect-error\n    const headers = new Headers(opts.headers)\n\n    // validate resource type\n    // @ts-expect-error\n    if (typeof resource !== 'string' && !(resource instanceof URL || resource instanceof Request)) {\n      throw new TypeError('`resource` must be a string, URL, or Request')\n    }\n\n    const url = new URL(resource.toString(), opts.base)\n\n    const {\n      searchParams,\n      transformSearchParams,\n      json\n    } = opts\n\n    if (searchParams) {\n      if (typeof transformSearchParams === 'function') {\n        // @ts-ignore\n        url.search = transformSearchParams(new URLSearchParams(opts.searchParams))\n      } else {\n        // @ts-ignore\n        url.search = new URLSearchParams(opts.searchParams)\n      }\n    }\n\n    if (json) {\n      opts.body = JSON.stringify(opts.json)\n      headers.set('content-type', 'application/json')\n    }\n\n    const abortController = new AbortController()\n    // @ts-ignore\n    const signal = anySignal([abortController.signal, opts.signal])\n\n    /** @type {ExtendedResponse} */\n    // @ts-expect-error additional fields are assigned below\n    const response = await timeout(\n      fetch(\n        url.toString(),\n        {\n          ...opts,\n          signal,\n          // @ts-expect-error non-browser fetch implementations may take extra options\n          timeout: undefined,\n          headers\n        }\n      ),\n      opts.timeout,\n      abortController\n    )\n\n    if (!response.ok && opts.throwHttpErrors) {\n      if (opts.handleError) {\n        await opts.handleError(response)\n      }\n      throw new HTTPError(response)\n    }\n\n    response.iterator = async function * () {\n      yield * fromStream(response.body)\n    }\n\n    response.ndjson = async function * () {\n      for await (const chunk of ndjson(response.iterator())) {\n        if (options.transform) {\n          yield options.transform(chunk)\n        } else {\n          yield chunk\n        }\n      }\n    }\n\n    return response\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  post (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'POST' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  get (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'GET' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  put (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'PUT' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  delete (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'DELETE' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  options (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'OPTIONS' })\n  }\n}\n\n/**\n * Parses NDJSON chunks from an iterator\n *\n * @param {AsyncIterable<Uint8Array>} source\n * @returns {AsyncIterable<any>}\n */\nconst ndjson = async function * (source) {\n  const decoder = new TextDecoder()\n  let buf = ''\n\n  for await (const chunk of source) {\n    buf += decoder.decode(chunk, { stream: true })\n    const lines = buf.split(/\\r?\\n/)\n\n    for (let i = 0; i < lines.length - 1; i++) {\n      const l = lines[i].trim()\n      if (l.length > 0) {\n        yield JSON.parse(l)\n      }\n    }\n    buf = lines[lines.length - 1]\n  }\n  buf += decoder.decode()\n  buf = buf.trim()\n  if (buf.length !== 0) {\n    yield JSON.parse(buf)\n  }\n}\n\n/**\n * Stream to AsyncIterable\n *\n * @template TChunk\n * @param {ReadableStream<TChunk> | NodeReadableStream | null} source\n * @returns {AsyncIterable<TChunk>}\n */\nconst fromStream = (source) => {\n  // Workaround for https://github.com/node-fetch/node-fetch/issues/766\n  if (isNodeReadableStream(source)) {\n    const iter = source[Symbol.asyncIterator]()\n    return {\n      [Symbol.asyncIterator] () {\n        return {\n          next: iter.next.bind(iter),\n          return (value) {\n            source.destroy()\n            if (typeof iter.return === 'function') {\n              return iter.return()\n            }\n            return Promise.resolve({ done: true, value })\n          }\n        }\n      }\n    }\n  }\n\n  if (isWebReadableStream(source)) {\n    const reader = source.getReader()\n    return (async function * () {\n      try {\n        while (true) {\n          // Read from the stream\n          const { done, value } = await reader.read()\n          // Exit if we're done\n          if (done) return\n          // Else yield the chunk\n          if (value) {\n            yield value\n          }\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  if (isAsyncIterable(source)) {\n    return source\n  }\n\n  throw new TypeError('Body can\\'t be converted to AsyncIterable')\n}\n\n/**\n * Check if it's an AsyncIterable\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|AsyncIterable<TChunk>} value\n * @returns {value is AsyncIterable<TChunk>}\n */\nconst isAsyncIterable = (value) => {\n  return typeof value === 'object' &&\n  value !== null &&\n  typeof /** @type {any} */(value)[Symbol.asyncIterator] === 'function'\n}\n\n/**\n * Check for web readable stream\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|ReadableStream<TChunk>} value\n * @returns {value is ReadableStream<TChunk>}\n */\nconst isWebReadableStream = (value) => {\n  return value && typeof /** @type {any} */(value).getReader === 'function'\n}\n\n/**\n * @param {any} value\n * @returns {value is NodeReadableStream}\n */\nconst isNodeReadableStream = (value) =>\n  Object.prototype.hasOwnProperty.call(value, 'readable') &&\n  Object.prototype.hasOwnProperty.call(value, 'writable')\n\nHTTP.HTTPError = HTTPError\nHTTP.TimeoutError = TimeoutError\nHTTP.streamToAsyncIterator = fromStream\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.post = (resource, options) => new HTTP(options).post(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.get = (resource, options) => new HTTP(options).get(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.put = (resource, options) => new HTTP(options).put(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.delete = (resource, options) => new HTTP(options).delete(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.options = (resource, options) => new HTTP(options).options(resource, options)\n\nmodule.exports = HTTP\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}