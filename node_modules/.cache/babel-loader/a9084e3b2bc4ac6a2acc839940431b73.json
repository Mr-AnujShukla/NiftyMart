{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _awaitAsyncGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _asyncIterator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\n/**\n * Takes an (async) iterable and returns one with each item mapped by the passed\n * function\n */\nexport default function map(_x, _x2) {\n  return _map.apply(this, arguments);\n}\nfunction _map() {\n  _map = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source, func) {\n    var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, val;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context.prev = 2;\n            _iterator = _asyncIterator(source);\n          case 4:\n            _context.next = 6;\n            return _awaitAsyncGenerator(_iterator.next());\n          case 6:\n            if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n              _context.next = 13;\n              break;\n            }\n            val = _step.value;\n            _context.next = 10;\n            return func(val);\n          case 10:\n            _iteratorAbruptCompletion = false;\n            _context.next = 4;\n            break;\n          case 13:\n            _context.next = 19;\n            break;\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](2);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n          case 19:\n            _context.prev = 19;\n            _context.prev = 20;\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context.next = 24;\n              break;\n            }\n            _context.next = 24;\n            return _awaitAsyncGenerator(_iterator.return());\n          case 24:\n            _context.prev = 24;\n            if (!_didIteratorError) {\n              _context.next = 27;\n              break;\n            }\n            throw _iteratorError;\n          case 27:\n            return _context.finish(24);\n          case 28:\n            return _context.finish(19);\n          case 29:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 15, 19, 29], [20,, 24, 28]]);\n  }));\n  return _map.apply(this, arguments);\n}","map":{"version":3,"mappings":";;;;AAAA;;;;AAIA,wBAAgCA,GAAG;EAAA;AAAA;AAIlC;EAAA,oEAJc,iBAA6BC,MAAoC,EAAEC,IAAgC;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA;YAAA,2BACxFD,MAAM;UAAA;YAAA;YAAA;UAAA;YAAA;cAAA;cAAA;YAAA;YAAbE,GAAG;YAAA;YAClB,OAAMD,IAAI,CAACC,GAAG,CAAC;UAAA;YAAA;YAAA;YAAA;UAAA;YAAA;YAAA;UAAA;YAAA;YAAA;YAAA;YAAA;UAAA;YAAA;YAAA;YAAA;cAAA;cAAA;YAAA;YAAA;YAAA;UAAA;YAAA;YAAA;cAAA;cAAA;YAAA;YAAA;UAAA;YAAA;UAAA;YAAA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAElB;EAAA;AAAA","names":["map","source","func","val"],"sources":["C:\\Users\\HP\\Desktop\\my_workspace\\hackathon\\NFT\\Pixelate\\node_modules\\it-map\\src\\index.ts"],"sourcesContent":["/**\n * Takes an (async) iterable and returns one with each item mapped by the passed\n * function\n */\nexport default async function * map <I, O> (source: AsyncIterable<I>|Iterable<I>, func: (val: I) => O | Promise<O>): AsyncGenerator<O, void, undefined> {\n  for await (const val of source) {\n    yield func(val)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}