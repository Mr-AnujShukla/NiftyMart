{"ast":null,"code":"import _toConsumableArray from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { decode as _decode } from '../decode.js';\nimport { Token, Type } from '../token.js';\nimport { decodeCodePointsArray } from '../byte-utils.js';\nimport { decodeErrPrefix } from '../common.js';\nvar Tokenizer = /*#__PURE__*/function () {\n  function Tokenizer(data) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Tokenizer);\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n    this.modeStack = ['value'];\n    this.lastToken = '';\n  }\n  _createClass(Tokenizer, [{\n    key: \"done\",\n    value: function done() {\n      return this.pos >= this.data.length;\n    }\n  }, {\n    key: \"ch\",\n    value: function ch() {\n      return this.data[this.pos];\n    }\n  }, {\n    key: \"currentMode\",\n    value: function currentMode() {\n      return this.modeStack[this.modeStack.length - 1];\n    }\n  }, {\n    key: \"skipWhitespace\",\n    value: function skipWhitespace() {\n      var c = this.ch();\n      while (c === 32 || c === 9 || c === 13 || c === 10) {\n        c = this.data[++this.pos];\n      }\n    }\n  }, {\n    key: \"expect\",\n    value: function expect(str) {\n      if (this.data.length - this.pos < str.length) {\n        throw new Error(\"\".concat(decodeErrPrefix, \" unexpected end of input at position \").concat(this.pos));\n      }\n      for (var i = 0; i < str.length; i++) {\n        if (this.data[this.pos++] !== str[i]) {\n          throw new Error(\"\".concat(decodeErrPrefix, \" unexpected token at position \").concat(this.pos, \", expected to find '\").concat(String.fromCharCode.apply(String, _toConsumableArray(str)), \"'\"));\n        }\n      }\n    }\n  }, {\n    key: \"parseNumber\",\n    value: function parseNumber() {\n      var _this = this;\n      var startPos = this.pos;\n      var negative = false;\n      var float = false;\n      var swallow = function swallow(chars) {\n        while (!_this.done()) {\n          var ch = _this.ch();\n          if (chars.includes(ch)) {\n            _this.pos++;\n          } else {\n            break;\n          }\n        }\n      };\n      if (this.ch() === 45) {\n        negative = true;\n        this.pos++;\n      }\n      if (this.ch() === 48) {\n        this.pos++;\n        if (this.ch() === 46) {\n          this.pos++;\n          float = true;\n        } else {\n          return new Token(Type.uint, 0, this.pos - startPos);\n        }\n      }\n      swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);\n      if (negative && this.pos === startPos + 1) {\n        throw new Error(\"\".concat(decodeErrPrefix, \" unexpected token at position \").concat(this.pos));\n      }\n      if (!this.done() && this.ch() === 46) {\n        if (float) {\n          throw new Error(\"\".concat(decodeErrPrefix, \" unexpected token at position \").concat(this.pos));\n        }\n        float = true;\n        this.pos++;\n        swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);\n      }\n      if (!this.done() && (this.ch() === 101 || this.ch() === 69)) {\n        float = true;\n        this.pos++;\n        if (!this.done() && (this.ch() === 43 || this.ch() === 45)) {\n          this.pos++;\n        }\n        swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);\n      }\n      var numStr = String.fromCharCode.apply(null, this.data.subarray(startPos, this.pos));\n      var num = parseFloat(numStr);\n      if (float) {\n        return new Token(Type.float, num, this.pos - startPos);\n      }\n      if (this.options.allowBigInt !== true || Number.isSafeInteger(num)) {\n        return new Token(num >= 0 ? Type.uint : Type.negint, num, this.pos - startPos);\n      }\n      return new Token(num >= 0 ? Type.uint : Type.negint, BigInt(numStr), this.pos - startPos);\n    }\n  }, {\n    key: \"parseString\",\n    value: function parseString() {\n      var _this2 = this;\n      if (this.ch() !== 34) {\n        throw new Error(\"\".concat(decodeErrPrefix, \" unexpected character at position \").concat(this.pos, \"; this shouldn't happen\"));\n      }\n      this.pos++;\n      for (var i = this.pos, l = 0; i < this.data.length && l < 65536; i++, l++) {\n        var ch = this.data[i];\n        if (ch === 92 || ch < 32 || ch >= 128) {\n          break;\n        }\n        if (ch === 34) {\n          var str = String.fromCharCode.apply(null, this.data.subarray(this.pos, i));\n          this.pos = i + 1;\n          return new Token(Type.string, str, l);\n        }\n      }\n      var startPos = this.pos;\n      var chars = [];\n      var readu4 = function readu4() {\n        if (_this2.pos + 4 >= _this2.data.length) {\n          throw new Error(\"\".concat(decodeErrPrefix, \" unexpected end of unicode escape sequence at position \").concat(_this2.pos));\n        }\n        var u4 = 0;\n        for (var _i = 0; _i < 4; _i++) {\n          var _ch = _this2.ch();\n          if (_ch >= 48 && _ch <= 57) {\n            _ch -= 48;\n          } else if (_ch >= 97 && _ch <= 102) {\n            _ch = _ch - 97 + 10;\n          } else if (_ch >= 65 && _ch <= 70) {\n            _ch = _ch - 65 + 10;\n          } else {\n            throw new Error(\"\".concat(decodeErrPrefix, \" unexpected unicode escape character at position \").concat(_this2.pos));\n          }\n          u4 = u4 * 16 + _ch;\n          _this2.pos++;\n        }\n        return u4;\n      };\n      var readUtf8Char = function readUtf8Char() {\n        var firstByte = _this2.ch();\n        var codePoint = null;\n        var bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n        if (_this2.pos + bytesPerSequence > _this2.data.length) {\n          throw new Error(\"\".concat(decodeErrPrefix, \" unexpected unicode sequence at position \").concat(_this2.pos));\n        }\n        var secondByte, thirdByte, fourthByte, tempCodePoint;\n        switch (bytesPerSequence) {\n          case 1:\n            if (firstByte < 128) {\n              codePoint = firstByte;\n            }\n            break;\n          case 2:\n            secondByte = _this2.data[_this2.pos + 1];\n            if ((secondByte & 192) === 128) {\n              tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n              if (tempCodePoint > 127) {\n                codePoint = tempCodePoint;\n              }\n            }\n            break;\n          case 3:\n            secondByte = _this2.data[_this2.pos + 1];\n            thirdByte = _this2.data[_this2.pos + 2];\n            if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n              tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n              if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n                codePoint = tempCodePoint;\n              }\n            }\n            break;\n          case 4:\n            secondByte = _this2.data[_this2.pos + 1];\n            thirdByte = _this2.data[_this2.pos + 2];\n            fourthByte = _this2.data[_this2.pos + 3];\n            if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n              tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n              if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n                codePoint = tempCodePoint;\n              }\n            }\n        }\n        if (codePoint === null) {\n          codePoint = 65533;\n          bytesPerSequence = 1;\n        } else if (codePoint > 65535) {\n          codePoint -= 65536;\n          chars.push(codePoint >>> 10 & 1023 | 55296);\n          codePoint = 56320 | codePoint & 1023;\n        }\n        chars.push(codePoint);\n        _this2.pos += bytesPerSequence;\n      };\n      while (!this.done()) {\n        var _ch2 = this.ch();\n        var ch1 = void 0;\n        switch (_ch2) {\n          case 92:\n            this.pos++;\n            if (this.done()) {\n              throw new Error(\"\".concat(decodeErrPrefix, \" unexpected string termination at position \").concat(this.pos));\n            }\n            ch1 = this.ch();\n            this.pos++;\n            switch (ch1) {\n              case 34:\n              case 39:\n              case 92:\n              case 47:\n                chars.push(ch1);\n                break;\n              case 98:\n                chars.push(8);\n                break;\n              case 116:\n                chars.push(9);\n                break;\n              case 110:\n                chars.push(10);\n                break;\n              case 102:\n                chars.push(12);\n                break;\n              case 114:\n                chars.push(13);\n                break;\n              case 117:\n                chars.push(readu4());\n                break;\n              default:\n                throw new Error(\"\".concat(decodeErrPrefix, \" unexpected string escape character at position \").concat(this.pos));\n            }\n            break;\n          case 34:\n            this.pos++;\n            return new Token(Type.string, decodeCodePointsArray(chars), this.pos - startPos);\n          default:\n            if (_ch2 < 32) {\n              throw new Error(\"\".concat(decodeErrPrefix, \" invalid control character at position \").concat(this.pos));\n            } else if (_ch2 < 128) {\n              chars.push(_ch2);\n              this.pos++;\n            } else {\n              readUtf8Char();\n            }\n        }\n      }\n      throw new Error(\"\".concat(decodeErrPrefix, \" unexpected end of string at position \").concat(this.pos));\n    }\n  }, {\n    key: \"parseValue\",\n    value: function parseValue() {\n      switch (this.ch()) {\n        case 123:\n          this.modeStack.push('obj-start');\n          this.pos++;\n          return new Token(Type.map, Infinity, 1);\n        case 91:\n          this.modeStack.push('array-start');\n          this.pos++;\n          return new Token(Type.array, Infinity, 1);\n        case 34:\n          {\n            return this.parseString();\n          }\n        case 110:\n          this.expect([110, 117, 108, 108]);\n          return new Token(Type.null, null, 4);\n        case 102:\n          this.expect([102, 97, 108, 115, 101]);\n          return new Token(Type.false, false, 5);\n        case 116:\n          this.expect([116, 114, 117, 101]);\n          return new Token(Type.true, true, 4);\n        case 45:\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n          return this.parseNumber();\n        default:\n          throw new Error(\"\".concat(decodeErrPrefix, \" unexpected character at position \").concat(this.pos));\n      }\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      this.skipWhitespace();\n      switch (this.currentMode()) {\n        case 'value':\n          this.modeStack.pop();\n          return this.parseValue();\n        case 'array-value':\n          {\n            this.modeStack.pop();\n            if (this.ch() === 93) {\n              this.pos++;\n              this.skipWhitespace();\n              return new Token(Type.break, undefined, 1);\n            }\n            if (this.ch() !== 44) {\n              throw new Error(\"\".concat(decodeErrPrefix, \" unexpected character at position \").concat(this.pos, \", was expecting array delimiter but found '\").concat(String.fromCharCode(this.ch()), \"'\"));\n            }\n            this.pos++;\n            this.modeStack.push('array-value');\n            this.skipWhitespace();\n            return this.parseValue();\n          }\n        case 'array-start':\n          {\n            this.modeStack.pop();\n            if (this.ch() === 93) {\n              this.pos++;\n              this.skipWhitespace();\n              return new Token(Type.break, undefined, 1);\n            }\n            this.modeStack.push('array-value');\n            this.skipWhitespace();\n            return this.parseValue();\n          }\n        case 'obj-key':\n          if (this.ch() === 125) {\n            this.modeStack.pop();\n            this.pos++;\n            this.skipWhitespace();\n            return new Token(Type.break, undefined, 1);\n          }\n          if (this.ch() !== 44) {\n            throw new Error(\"\".concat(decodeErrPrefix, \" unexpected character at position \").concat(this.pos, \", was expecting object delimiter but found '\").concat(String.fromCharCode(this.ch()), \"'\"));\n          }\n          this.pos++;\n          this.skipWhitespace();\n        case 'obj-start':\n          {\n            this.modeStack.pop();\n            if (this.ch() === 125) {\n              this.pos++;\n              this.skipWhitespace();\n              return new Token(Type.break, undefined, 1);\n            }\n            var token = this.parseString();\n            this.skipWhitespace();\n            if (this.ch() !== 58) {\n              throw new Error(\"\".concat(decodeErrPrefix, \" unexpected character at position \").concat(this.pos, \", was expecting key/value delimiter ':' but found '\").concat(String.fromCharCode(this.ch()), \"'\"));\n            }\n            this.pos++;\n            this.modeStack.push('obj-value');\n            return token;\n          }\n        case 'obj-value':\n          {\n            this.modeStack.pop();\n            this.modeStack.push('obj-key');\n            this.skipWhitespace();\n            return this.parseValue();\n          }\n        default:\n          throw new Error(\"\".concat(decodeErrPrefix, \" unexpected parse state at position \").concat(this.pos, \"; this shouldn't happen\"));\n      }\n    }\n  }]);\n  return Tokenizer;\n}();\nfunction decode(data, options) {\n  options = Object.assign({\n    tokenizer: new Tokenizer(data, options)\n  }, options);\n  return _decode(data, options);\n}\nexport { decode, Tokenizer };","map":{"version":3,"names":["decode","_decode","Token","Type","decodeCodePointsArray","decodeErrPrefix","Tokenizer","data","options","pos","modeStack","lastToken","length","c","ch","str","Error","i","String","fromCharCode","startPos","negative","float","swallow","chars","done","includes","uint","numStr","apply","subarray","num","parseFloat","allowBigInt","Number","isSafeInteger","negint","BigInt","l","string","readu4","u4","readUtf8Char","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","push","ch1","map","Infinity","array","parseString","expect","null","false","true","parseNumber","skipWhitespace","currentMode","pop","parseValue","break","undefined","token","Object","assign","tokenizer"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/cborg/esm/lib/json/decode.js"],"sourcesContent":["import { decode as _decode } from '../decode.js';\nimport {\n  Token,\n  Type\n} from '../token.js';\nimport { decodeCodePointsArray } from '../byte-utils.js';\nimport { decodeErrPrefix } from '../common.js';\nclass Tokenizer {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n    this.modeStack = ['value'];\n    this.lastToken = '';\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  ch() {\n    return this.data[this.pos];\n  }\n  currentMode() {\n    return this.modeStack[this.modeStack.length - 1];\n  }\n  skipWhitespace() {\n    let c = this.ch();\n    while (c === 32 || c === 9 || c === 13 || c === 10) {\n      c = this.data[++this.pos];\n    }\n  }\n  expect(str) {\n    if (this.data.length - this.pos < str.length) {\n      throw new Error(`${ decodeErrPrefix } unexpected end of input at position ${ this.pos }`);\n    }\n    for (let i = 0; i < str.length; i++) {\n      if (this.data[this.pos++] !== str[i]) {\n        throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }, expected to find '${ String.fromCharCode(...str) }'`);\n      }\n    }\n  }\n  parseNumber() {\n    const startPos = this.pos;\n    let negative = false;\n    let float = false;\n    const swallow = chars => {\n      while (!this.done()) {\n        const ch = this.ch();\n        if (chars.includes(ch)) {\n          this.pos++;\n        } else {\n          break;\n        }\n      }\n    };\n    if (this.ch() === 45) {\n      negative = true;\n      this.pos++;\n    }\n    if (this.ch() === 48) {\n      this.pos++;\n      if (this.ch() === 46) {\n        this.pos++;\n        float = true;\n      } else {\n        return new Token(Type.uint, 0, this.pos - startPos);\n      }\n    }\n    swallow([\n      48,\n      49,\n      50,\n      51,\n      52,\n      53,\n      54,\n      55,\n      56,\n      57\n    ]);\n    if (negative && this.pos === startPos + 1) {\n      throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }`);\n    }\n    if (!this.done() && this.ch() === 46) {\n      if (float) {\n        throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }`);\n      }\n      float = true;\n      this.pos++;\n      swallow([\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57\n      ]);\n    }\n    if (!this.done() && (this.ch() === 101 || this.ch() === 69)) {\n      float = true;\n      this.pos++;\n      if (!this.done() && (this.ch() === 43 || this.ch() === 45)) {\n        this.pos++;\n      }\n      swallow([\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57\n      ]);\n    }\n    const numStr = String.fromCharCode.apply(null, this.data.subarray(startPos, this.pos));\n    const num = parseFloat(numStr);\n    if (float) {\n      return new Token(Type.float, num, this.pos - startPos);\n    }\n    if (this.options.allowBigInt !== true || Number.isSafeInteger(num)) {\n      return new Token(num >= 0 ? Type.uint : Type.negint, num, this.pos - startPos);\n    }\n    return new Token(num >= 0 ? Type.uint : Type.negint, BigInt(numStr), this.pos - startPos);\n  }\n  parseString() {\n    if (this.ch() !== 34) {\n      throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }; this shouldn't happen`);\n    }\n    this.pos++;\n    for (let i = this.pos, l = 0; i < this.data.length && l < 65536; i++, l++) {\n      const ch = this.data[i];\n      if (ch === 92 || ch < 32 || ch >= 128) {\n        break;\n      }\n      if (ch === 34) {\n        const str = String.fromCharCode.apply(null, this.data.subarray(this.pos, i));\n        this.pos = i + 1;\n        return new Token(Type.string, str, l);\n      }\n    }\n    const startPos = this.pos;\n    const chars = [];\n    const readu4 = () => {\n      if (this.pos + 4 >= this.data.length) {\n        throw new Error(`${ decodeErrPrefix } unexpected end of unicode escape sequence at position ${ this.pos }`);\n      }\n      let u4 = 0;\n      for (let i = 0; i < 4; i++) {\n        let ch = this.ch();\n        if (ch >= 48 && ch <= 57) {\n          ch -= 48;\n        } else if (ch >= 97 && ch <= 102) {\n          ch = ch - 97 + 10;\n        } else if (ch >= 65 && ch <= 70) {\n          ch = ch - 65 + 10;\n        } else {\n          throw new Error(`${ decodeErrPrefix } unexpected unicode escape character at position ${ this.pos }`);\n        }\n        u4 = u4 * 16 + ch;\n        this.pos++;\n      }\n      return u4;\n    };\n    const readUtf8Char = () => {\n      const firstByte = this.ch();\n      let codePoint = null;\n      let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n      if (this.pos + bytesPerSequence > this.data.length) {\n        throw new Error(`${ decodeErrPrefix } unexpected unicode sequence at position ${ this.pos }`);\n      }\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = this.data[this.pos + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = this.data[this.pos + 1];\n        thirdByte = this.data[this.pos + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = this.data[this.pos + 1];\n        thirdByte = this.data[this.pos + 2];\n        fourthByte = this.data[this.pos + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n      if (codePoint === null) {\n        codePoint = 65533;\n        bytesPerSequence = 1;\n      } else if (codePoint > 65535) {\n        codePoint -= 65536;\n        chars.push(codePoint >>> 10 & 1023 | 55296);\n        codePoint = 56320 | codePoint & 1023;\n      }\n      chars.push(codePoint);\n      this.pos += bytesPerSequence;\n    };\n    while (!this.done()) {\n      const ch = this.ch();\n      let ch1;\n      switch (ch) {\n      case 92:\n        this.pos++;\n        if (this.done()) {\n          throw new Error(`${ decodeErrPrefix } unexpected string termination at position ${ this.pos }`);\n        }\n        ch1 = this.ch();\n        this.pos++;\n        switch (ch1) {\n        case 34:\n        case 39:\n        case 92:\n        case 47:\n          chars.push(ch1);\n          break;\n        case 98:\n          chars.push(8);\n          break;\n        case 116:\n          chars.push(9);\n          break;\n        case 110:\n          chars.push(10);\n          break;\n        case 102:\n          chars.push(12);\n          break;\n        case 114:\n          chars.push(13);\n          break;\n        case 117:\n          chars.push(readu4());\n          break;\n        default:\n          throw new Error(`${ decodeErrPrefix } unexpected string escape character at position ${ this.pos }`);\n        }\n        break;\n      case 34:\n        this.pos++;\n        return new Token(Type.string, decodeCodePointsArray(chars), this.pos - startPos);\n      default:\n        if (ch < 32) {\n          throw new Error(`${ decodeErrPrefix } invalid control character at position ${ this.pos }`);\n        } else if (ch < 128) {\n          chars.push(ch);\n          this.pos++;\n        } else {\n          readUtf8Char();\n        }\n      }\n    }\n    throw new Error(`${ decodeErrPrefix } unexpected end of string at position ${ this.pos }`);\n  }\n  parseValue() {\n    switch (this.ch()) {\n    case 123:\n      this.modeStack.push('obj-start');\n      this.pos++;\n      return new Token(Type.map, Infinity, 1);\n    case 91:\n      this.modeStack.push('array-start');\n      this.pos++;\n      return new Token(Type.array, Infinity, 1);\n    case 34: {\n        return this.parseString();\n      }\n    case 110:\n      this.expect([\n        110,\n        117,\n        108,\n        108\n      ]);\n      return new Token(Type.null, null, 4);\n    case 102:\n      this.expect([\n        102,\n        97,\n        108,\n        115,\n        101\n      ]);\n      return new Token(Type.false, false, 5);\n    case 116:\n      this.expect([\n        116,\n        114,\n        117,\n        101\n      ]);\n      return new Token(Type.true, true, 4);\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return this.parseNumber();\n    default:\n      throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }`);\n    }\n  }\n  next() {\n    this.skipWhitespace();\n    switch (this.currentMode()) {\n    case 'value':\n      this.modeStack.pop();\n      return this.parseValue();\n    case 'array-value': {\n        this.modeStack.pop();\n        if (this.ch() === 93) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        if (this.ch() !== 44) {\n          throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting array delimiter but found '${ String.fromCharCode(this.ch()) }'`);\n        }\n        this.pos++;\n        this.modeStack.push('array-value');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    case 'array-start': {\n        this.modeStack.pop();\n        if (this.ch() === 93) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        this.modeStack.push('array-value');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    case 'obj-key':\n      if (this.ch() === 125) {\n        this.modeStack.pop();\n        this.pos++;\n        this.skipWhitespace();\n        return new Token(Type.break, undefined, 1);\n      }\n      if (this.ch() !== 44) {\n        throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting object delimiter but found '${ String.fromCharCode(this.ch()) }'`);\n      }\n      this.pos++;\n      this.skipWhitespace();\n    case 'obj-start': {\n        this.modeStack.pop();\n        if (this.ch() === 125) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        const token = this.parseString();\n        this.skipWhitespace();\n        if (this.ch() !== 58) {\n          throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting key/value delimiter ':' but found '${ String.fromCharCode(this.ch()) }'`);\n        }\n        this.pos++;\n        this.modeStack.push('obj-value');\n        return token;\n      }\n    case 'obj-value': {\n        this.modeStack.pop();\n        this.modeStack.push('obj-key');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    default:\n      throw new Error(`${ decodeErrPrefix } unexpected parse state at position ${ this.pos }; this shouldn't happen`);\n    }\n  }\n}\nfunction decode(data, options) {\n  options = Object.assign({ tokenizer: new Tokenizer(data, options) }, options);\n  return _decode(data, options);\n}\nexport {\n  decode,\n  Tokenizer\n};"],"mappings":";;;AAAA,SAASA,MAAM,IAAIC,OAAO,QAAQ,cAAc;AAChD,SACEC,KAAK,EACLC,IAAI,QACC,aAAa;AACpB,SAASC,qBAAqB,QAAQ,kBAAkB;AACxD,SAASC,eAAe,QAAQ,cAAc;AAAC,IACzCC,SAAS;EACb,mBAAYC,IAAI,EAAgB;IAAA,IAAdC,OAAO,uEAAG,CAAC,CAAC;IAAA;IAC5B,IAAI,CAACC,GAAG,GAAG,CAAC;IACZ,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACE,SAAS,GAAG,CAAC,OAAO,CAAC;IAC1B,IAAI,CAACC,SAAS,GAAG,EAAE;EACrB;EAAC;IAAA;IAAA,OACD,gBAAO;MACL,OAAO,IAAI,CAACF,GAAG,IAAI,IAAI,CAACF,IAAI,CAACK,MAAM;IACrC;EAAC;IAAA;IAAA,OACD,cAAK;MACH,OAAO,IAAI,CAACL,IAAI,CAAC,IAAI,CAACE,GAAG,CAAC;IAC5B;EAAC;IAAA;IAAA,OACD,uBAAc;MACZ,OAAO,IAAI,CAACC,SAAS,CAAC,IAAI,CAACA,SAAS,CAACE,MAAM,GAAG,CAAC,CAAC;IAClD;EAAC;IAAA;IAAA,OACD,0BAAiB;MACf,IAAIC,CAAC,GAAG,IAAI,CAACC,EAAE,EAAE;MACjB,OAAOD,CAAC,KAAK,EAAE,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,EAAE,IAAIA,CAAC,KAAK,EAAE,EAAE;QAClDA,CAAC,GAAG,IAAI,CAACN,IAAI,CAAC,EAAE,IAAI,CAACE,GAAG,CAAC;MAC3B;IACF;EAAC;IAAA;IAAA,OACD,gBAAOM,GAAG,EAAE;MACV,IAAI,IAAI,CAACR,IAAI,CAACK,MAAM,GAAG,IAAI,CAACH,GAAG,GAAGM,GAAG,CAACH,MAAM,EAAE;QAC5C,MAAM,IAAII,KAAK,WAAKX,eAAe,kDAA0C,IAAI,CAACI,GAAG,EAAI;MAC3F;MACA,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAACH,MAAM,EAAEK,CAAC,EAAE,EAAE;QACnC,IAAI,IAAI,CAACV,IAAI,CAAC,IAAI,CAACE,GAAG,EAAE,CAAC,KAAKM,GAAG,CAACE,CAAC,CAAC,EAAE;UACpC,MAAM,IAAID,KAAK,WAAKX,eAAe,2CAAmC,IAAI,CAACI,GAAG,iCAAyBS,MAAM,CAACC,YAAY,OAAnBD,MAAM,qBAAiBH,GAAG,EAAC,OAAK;QACzI;MACF;IACF;EAAC;IAAA;IAAA,OACD,uBAAc;MAAA;MACZ,IAAMK,QAAQ,GAAG,IAAI,CAACX,GAAG;MACzB,IAAIY,QAAQ,GAAG,KAAK;MACpB,IAAIC,KAAK,GAAG,KAAK;MACjB,IAAMC,OAAO,GAAG,SAAVA,OAAO,CAAGC,KAAK,EAAI;QACvB,OAAO,CAAC,KAAI,CAACC,IAAI,EAAE,EAAE;UACnB,IAAMX,EAAE,GAAG,KAAI,CAACA,EAAE,EAAE;UACpB,IAAIU,KAAK,CAACE,QAAQ,CAACZ,EAAE,CAAC,EAAE;YACtB,KAAI,CAACL,GAAG,EAAE;UACZ,CAAC,MAAM;YACL;UACF;QACF;MACF,CAAC;MACD,IAAI,IAAI,CAACK,EAAE,EAAE,KAAK,EAAE,EAAE;QACpBO,QAAQ,GAAG,IAAI;QACf,IAAI,CAACZ,GAAG,EAAE;MACZ;MACA,IAAI,IAAI,CAACK,EAAE,EAAE,KAAK,EAAE,EAAE;QACpB,IAAI,CAACL,GAAG,EAAE;QACV,IAAI,IAAI,CAACK,EAAE,EAAE,KAAK,EAAE,EAAE;UACpB,IAAI,CAACL,GAAG,EAAE;UACVa,KAAK,GAAG,IAAI;QACd,CAAC,MAAM;UACL,OAAO,IAAIpB,KAAK,CAACC,IAAI,CAACwB,IAAI,EAAE,CAAC,EAAE,IAAI,CAAClB,GAAG,GAAGW,QAAQ,CAAC;QACrD;MACF;MACAG,OAAO,CAAC,CACN,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,CACH,CAAC;MACF,IAAIF,QAAQ,IAAI,IAAI,CAACZ,GAAG,KAAKW,QAAQ,GAAG,CAAC,EAAE;QACzC,MAAM,IAAIJ,KAAK,WAAKX,eAAe,2CAAmC,IAAI,CAACI,GAAG,EAAI;MACpF;MACA,IAAI,CAAC,IAAI,CAACgB,IAAI,EAAE,IAAI,IAAI,CAACX,EAAE,EAAE,KAAK,EAAE,EAAE;QACpC,IAAIQ,KAAK,EAAE;UACT,MAAM,IAAIN,KAAK,WAAKX,eAAe,2CAAmC,IAAI,CAACI,GAAG,EAAI;QACpF;QACAa,KAAK,GAAG,IAAI;QACZ,IAAI,CAACb,GAAG,EAAE;QACVc,OAAO,CAAC,CACN,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,CACH,CAAC;MACJ;MACA,IAAI,CAAC,IAAI,CAACE,IAAI,EAAE,KAAK,IAAI,CAACX,EAAE,EAAE,KAAK,GAAG,IAAI,IAAI,CAACA,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;QAC3DQ,KAAK,GAAG,IAAI;QACZ,IAAI,CAACb,GAAG,EAAE;QACV,IAAI,CAAC,IAAI,CAACgB,IAAI,EAAE,KAAK,IAAI,CAACX,EAAE,EAAE,KAAK,EAAE,IAAI,IAAI,CAACA,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;UAC1D,IAAI,CAACL,GAAG,EAAE;QACZ;QACAc,OAAO,CAAC,CACN,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,CACH,CAAC;MACJ;MACA,IAAMK,MAAM,GAAGV,MAAM,CAACC,YAAY,CAACU,KAAK,CAAC,IAAI,EAAE,IAAI,CAACtB,IAAI,CAACuB,QAAQ,CAACV,QAAQ,EAAE,IAAI,CAACX,GAAG,CAAC,CAAC;MACtF,IAAMsB,GAAG,GAAGC,UAAU,CAACJ,MAAM,CAAC;MAC9B,IAAIN,KAAK,EAAE;QACT,OAAO,IAAIpB,KAAK,CAACC,IAAI,CAACmB,KAAK,EAAES,GAAG,EAAE,IAAI,CAACtB,GAAG,GAAGW,QAAQ,CAAC;MACxD;MACA,IAAI,IAAI,CAACZ,OAAO,CAACyB,WAAW,KAAK,IAAI,IAAIC,MAAM,CAACC,aAAa,CAACJ,GAAG,CAAC,EAAE;QAClE,OAAO,IAAI7B,KAAK,CAAC6B,GAAG,IAAI,CAAC,GAAG5B,IAAI,CAACwB,IAAI,GAAGxB,IAAI,CAACiC,MAAM,EAAEL,GAAG,EAAE,IAAI,CAACtB,GAAG,GAAGW,QAAQ,CAAC;MAChF;MACA,OAAO,IAAIlB,KAAK,CAAC6B,GAAG,IAAI,CAAC,GAAG5B,IAAI,CAACwB,IAAI,GAAGxB,IAAI,CAACiC,MAAM,EAAEC,MAAM,CAACT,MAAM,CAAC,EAAE,IAAI,CAACnB,GAAG,GAAGW,QAAQ,CAAC;IAC3F;EAAC;IAAA;IAAA,OACD,uBAAc;MAAA;MACZ,IAAI,IAAI,CAACN,EAAE,EAAE,KAAK,EAAE,EAAE;QACpB,MAAM,IAAIE,KAAK,WAAKX,eAAe,+CAAuC,IAAI,CAACI,GAAG,6BAA2B;MAC/G;MACA,IAAI,CAACA,GAAG,EAAE;MACV,KAAK,IAAIQ,CAAC,GAAG,IAAI,CAACR,GAAG,EAAE6B,CAAC,GAAG,CAAC,EAAErB,CAAC,GAAG,IAAI,CAACV,IAAI,CAACK,MAAM,IAAI0B,CAAC,GAAG,KAAK,EAAErB,CAAC,EAAE,EAAEqB,CAAC,EAAE,EAAE;QACzE,IAAMxB,EAAE,GAAG,IAAI,CAACP,IAAI,CAACU,CAAC,CAAC;QACvB,IAAIH,EAAE,KAAK,EAAE,IAAIA,EAAE,GAAG,EAAE,IAAIA,EAAE,IAAI,GAAG,EAAE;UACrC;QACF;QACA,IAAIA,EAAE,KAAK,EAAE,EAAE;UACb,IAAMC,GAAG,GAAGG,MAAM,CAACC,YAAY,CAACU,KAAK,CAAC,IAAI,EAAE,IAAI,CAACtB,IAAI,CAACuB,QAAQ,CAAC,IAAI,CAACrB,GAAG,EAAEQ,CAAC,CAAC,CAAC;UAC5E,IAAI,CAACR,GAAG,GAAGQ,CAAC,GAAG,CAAC;UAChB,OAAO,IAAIf,KAAK,CAACC,IAAI,CAACoC,MAAM,EAAExB,GAAG,EAAEuB,CAAC,CAAC;QACvC;MACF;MACA,IAAMlB,QAAQ,GAAG,IAAI,CAACX,GAAG;MACzB,IAAMe,KAAK,GAAG,EAAE;MAChB,IAAMgB,MAAM,GAAG,SAATA,MAAM,GAAS;QACnB,IAAI,MAAI,CAAC/B,GAAG,GAAG,CAAC,IAAI,MAAI,CAACF,IAAI,CAACK,MAAM,EAAE;UACpC,MAAM,IAAII,KAAK,WAAKX,eAAe,oEAA4D,MAAI,CAACI,GAAG,EAAI;QAC7G;QACA,IAAIgC,EAAE,GAAG,CAAC;QACV,KAAK,IAAIxB,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAG,CAAC,EAAEA,EAAC,EAAE,EAAE;UAC1B,IAAIH,GAAE,GAAG,MAAI,CAACA,EAAE,EAAE;UAClB,IAAIA,GAAE,IAAI,EAAE,IAAIA,GAAE,IAAI,EAAE,EAAE;YACxBA,GAAE,IAAI,EAAE;UACV,CAAC,MAAM,IAAIA,GAAE,IAAI,EAAE,IAAIA,GAAE,IAAI,GAAG,EAAE;YAChCA,GAAE,GAAGA,GAAE,GAAG,EAAE,GAAG,EAAE;UACnB,CAAC,MAAM,IAAIA,GAAE,IAAI,EAAE,IAAIA,GAAE,IAAI,EAAE,EAAE;YAC/BA,GAAE,GAAGA,GAAE,GAAG,EAAE,GAAG,EAAE;UACnB,CAAC,MAAM;YACL,MAAM,IAAIE,KAAK,WAAKX,eAAe,8DAAsD,MAAI,CAACI,GAAG,EAAI;UACvG;UACAgC,EAAE,GAAGA,EAAE,GAAG,EAAE,GAAG3B,GAAE;UACjB,MAAI,CAACL,GAAG,EAAE;QACZ;QACA,OAAOgC,EAAE;MACX,CAAC;MACD,IAAMC,YAAY,GAAG,SAAfA,YAAY,GAAS;QACzB,IAAMC,SAAS,GAAG,MAAI,CAAC7B,EAAE,EAAE;QAC3B,IAAI8B,SAAS,GAAG,IAAI;QACpB,IAAIC,gBAAgB,GAAGF,SAAS,GAAG,GAAG,GAAG,CAAC,GAAGA,SAAS,GAAG,GAAG,GAAG,CAAC,GAAGA,SAAS,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;QAC1F,IAAI,MAAI,CAAClC,GAAG,GAAGoC,gBAAgB,GAAG,MAAI,CAACtC,IAAI,CAACK,MAAM,EAAE;UAClD,MAAM,IAAII,KAAK,WAAKX,eAAe,sDAA8C,MAAI,CAACI,GAAG,EAAI;QAC/F;QACA,IAAIqC,UAAU,EAAEC,SAAS,EAAEC,UAAU,EAAEC,aAAa;QACpD,QAAQJ,gBAAgB;UACxB,KAAK,CAAC;YACJ,IAAIF,SAAS,GAAG,GAAG,EAAE;cACnBC,SAAS,GAAGD,SAAS;YACvB;YACA;UACF,KAAK,CAAC;YACJG,UAAU,GAAG,MAAI,CAACvC,IAAI,CAAC,MAAI,CAACE,GAAG,GAAG,CAAC,CAAC;YACpC,IAAI,CAACqC,UAAU,GAAG,GAAG,MAAM,GAAG,EAAE;cAC9BG,aAAa,GAAG,CAACN,SAAS,GAAG,EAAE,KAAK,CAAC,GAAGG,UAAU,GAAG,EAAE;cACvD,IAAIG,aAAa,GAAG,GAAG,EAAE;gBACvBL,SAAS,GAAGK,aAAa;cAC3B;YACF;YACA;UACF,KAAK,CAAC;YACJH,UAAU,GAAG,MAAI,CAACvC,IAAI,CAAC,MAAI,CAACE,GAAG,GAAG,CAAC,CAAC;YACpCsC,SAAS,GAAG,MAAI,CAACxC,IAAI,CAAC,MAAI,CAACE,GAAG,GAAG,CAAC,CAAC;YACnC,IAAI,CAACqC,UAAU,GAAG,GAAG,MAAM,GAAG,IAAI,CAACC,SAAS,GAAG,GAAG,MAAM,GAAG,EAAE;cAC3DE,aAAa,GAAG,CAACN,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,CAACG,UAAU,GAAG,EAAE,KAAK,CAAC,GAAGC,SAAS,GAAG,EAAE;cAChF,IAAIE,aAAa,GAAG,IAAI,KAAKA,aAAa,GAAG,KAAK,IAAIA,aAAa,GAAG,KAAK,CAAC,EAAE;gBAC5EL,SAAS,GAAGK,aAAa;cAC3B;YACF;YACA;UACF,KAAK,CAAC;YACJH,UAAU,GAAG,MAAI,CAACvC,IAAI,CAAC,MAAI,CAACE,GAAG,GAAG,CAAC,CAAC;YACpCsC,SAAS,GAAG,MAAI,CAACxC,IAAI,CAAC,MAAI,CAACE,GAAG,GAAG,CAAC,CAAC;YACnCuC,UAAU,GAAG,MAAI,CAACzC,IAAI,CAAC,MAAI,CAACE,GAAG,GAAG,CAAC,CAAC;YACpC,IAAI,CAACqC,UAAU,GAAG,GAAG,MAAM,GAAG,IAAI,CAACC,SAAS,GAAG,GAAG,MAAM,GAAG,IAAI,CAACC,UAAU,GAAG,GAAG,MAAM,GAAG,EAAE;cACzFC,aAAa,GAAG,CAACN,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,CAACG,UAAU,GAAG,EAAE,KAAK,EAAE,GAAG,CAACC,SAAS,GAAG,EAAE,KAAK,CAAC,GAAGC,UAAU,GAAG,EAAE;cAC1G,IAAIC,aAAa,GAAG,KAAK,IAAIA,aAAa,GAAG,OAAO,EAAE;gBACpDL,SAAS,GAAGK,aAAa;cAC3B;YACF;QAAC;QAEH,IAAIL,SAAS,KAAK,IAAI,EAAE;UACtBA,SAAS,GAAG,KAAK;UACjBC,gBAAgB,GAAG,CAAC;QACtB,CAAC,MAAM,IAAID,SAAS,GAAG,KAAK,EAAE;UAC5BA,SAAS,IAAI,KAAK;UAClBpB,KAAK,CAAC0B,IAAI,CAACN,SAAS,KAAK,EAAE,GAAG,IAAI,GAAG,KAAK,CAAC;UAC3CA,SAAS,GAAG,KAAK,GAAGA,SAAS,GAAG,IAAI;QACtC;QACApB,KAAK,CAAC0B,IAAI,CAACN,SAAS,CAAC;QACrB,MAAI,CAACnC,GAAG,IAAIoC,gBAAgB;MAC9B,CAAC;MACD,OAAO,CAAC,IAAI,CAACpB,IAAI,EAAE,EAAE;QACnB,IAAMX,IAAE,GAAG,IAAI,CAACA,EAAE,EAAE;QACpB,IAAIqC,GAAG;QACP,QAAQrC,IAAE;UACV,KAAK,EAAE;YACL,IAAI,CAACL,GAAG,EAAE;YACV,IAAI,IAAI,CAACgB,IAAI,EAAE,EAAE;cACf,MAAM,IAAIT,KAAK,WAAKX,eAAe,wDAAgD,IAAI,CAACI,GAAG,EAAI;YACjG;YACA0C,GAAG,GAAG,IAAI,CAACrC,EAAE,EAAE;YACf,IAAI,CAACL,GAAG,EAAE;YACV,QAAQ0C,GAAG;cACX,KAAK,EAAE;cACP,KAAK,EAAE;cACP,KAAK,EAAE;cACP,KAAK,EAAE;gBACL3B,KAAK,CAAC0B,IAAI,CAACC,GAAG,CAAC;gBACf;cACF,KAAK,EAAE;gBACL3B,KAAK,CAAC0B,IAAI,CAAC,CAAC,CAAC;gBACb;cACF,KAAK,GAAG;gBACN1B,KAAK,CAAC0B,IAAI,CAAC,CAAC,CAAC;gBACb;cACF,KAAK,GAAG;gBACN1B,KAAK,CAAC0B,IAAI,CAAC,EAAE,CAAC;gBACd;cACF,KAAK,GAAG;gBACN1B,KAAK,CAAC0B,IAAI,CAAC,EAAE,CAAC;gBACd;cACF,KAAK,GAAG;gBACN1B,KAAK,CAAC0B,IAAI,CAAC,EAAE,CAAC;gBACd;cACF,KAAK,GAAG;gBACN1B,KAAK,CAAC0B,IAAI,CAACV,MAAM,EAAE,CAAC;gBACpB;cACF;gBACE,MAAM,IAAIxB,KAAK,WAAKX,eAAe,6DAAqD,IAAI,CAACI,GAAG,EAAI;YAAC;YAEvG;UACF,KAAK,EAAE;YACL,IAAI,CAACA,GAAG,EAAE;YACV,OAAO,IAAIP,KAAK,CAACC,IAAI,CAACoC,MAAM,EAAEnC,qBAAqB,CAACoB,KAAK,CAAC,EAAE,IAAI,CAACf,GAAG,GAAGW,QAAQ,CAAC;UAClF;YACE,IAAIN,IAAE,GAAG,EAAE,EAAE;cACX,MAAM,IAAIE,KAAK,WAAKX,eAAe,oDAA4C,IAAI,CAACI,GAAG,EAAI;YAC7F,CAAC,MAAM,IAAIK,IAAE,GAAG,GAAG,EAAE;cACnBU,KAAK,CAAC0B,IAAI,CAACpC,IAAE,CAAC;cACd,IAAI,CAACL,GAAG,EAAE;YACZ,CAAC,MAAM;cACLiC,YAAY,EAAE;YAChB;QAAC;MAEL;MACA,MAAM,IAAI1B,KAAK,WAAKX,eAAe,mDAA2C,IAAI,CAACI,GAAG,EAAI;IAC5F;EAAC;IAAA;IAAA,OACD,sBAAa;MACX,QAAQ,IAAI,CAACK,EAAE,EAAE;QACjB,KAAK,GAAG;UACN,IAAI,CAACJ,SAAS,CAACwC,IAAI,CAAC,WAAW,CAAC;UAChC,IAAI,CAACzC,GAAG,EAAE;UACV,OAAO,IAAIP,KAAK,CAACC,IAAI,CAACiD,GAAG,EAAEC,QAAQ,EAAE,CAAC,CAAC;QACzC,KAAK,EAAE;UACL,IAAI,CAAC3C,SAAS,CAACwC,IAAI,CAAC,aAAa,CAAC;UAClC,IAAI,CAACzC,GAAG,EAAE;UACV,OAAO,IAAIP,KAAK,CAACC,IAAI,CAACmD,KAAK,EAAED,QAAQ,EAAE,CAAC,CAAC;QAC3C,KAAK,EAAE;UAAE;YACL,OAAO,IAAI,CAACE,WAAW,EAAE;UAC3B;QACF,KAAK,GAAG;UACN,IAAI,CAACC,MAAM,CAAC,CACV,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,CACJ,CAAC;UACF,OAAO,IAAItD,KAAK,CAACC,IAAI,CAACsD,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QACtC,KAAK,GAAG;UACN,IAAI,CAACD,MAAM,CAAC,CACV,GAAG,EACH,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,CACJ,CAAC;UACF,OAAO,IAAItD,KAAK,CAACC,IAAI,CAACuD,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;QACxC,KAAK,GAAG;UACN,IAAI,CAACF,MAAM,CAAC,CACV,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,CACJ,CAAC;UACF,OAAO,IAAItD,KAAK,CAACC,IAAI,CAACwD,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QACtC,KAAK,EAAE;QACP,KAAK,EAAE;QACP,KAAK,EAAE;QACP,KAAK,EAAE;QACP,KAAK,EAAE;QACP,KAAK,EAAE;QACP,KAAK,EAAE;QACP,KAAK,EAAE;QACP,KAAK,EAAE;QACP,KAAK,EAAE;QACP,KAAK,EAAE;UACL,OAAO,IAAI,CAACC,WAAW,EAAE;QAC3B;UACE,MAAM,IAAI5C,KAAK,WAAKX,eAAe,+CAAuC,IAAI,CAACI,GAAG,EAAI;MAAC;IAE3F;EAAC;IAAA;IAAA,OACD,gBAAO;MACL,IAAI,CAACoD,cAAc,EAAE;MACrB,QAAQ,IAAI,CAACC,WAAW,EAAE;QAC1B,KAAK,OAAO;UACV,IAAI,CAACpD,SAAS,CAACqD,GAAG,EAAE;UACpB,OAAO,IAAI,CAACC,UAAU,EAAE;QAC1B,KAAK,aAAa;UAAE;YAChB,IAAI,CAACtD,SAAS,CAACqD,GAAG,EAAE;YACpB,IAAI,IAAI,CAACjD,EAAE,EAAE,KAAK,EAAE,EAAE;cACpB,IAAI,CAACL,GAAG,EAAE;cACV,IAAI,CAACoD,cAAc,EAAE;cACrB,OAAO,IAAI3D,KAAK,CAACC,IAAI,CAAC8D,KAAK,EAAEC,SAAS,EAAE,CAAC,CAAC;YAC5C;YACA,IAAI,IAAI,CAACpD,EAAE,EAAE,KAAK,EAAE,EAAE;cACpB,MAAM,IAAIE,KAAK,WAAKX,eAAe,+CAAuC,IAAI,CAACI,GAAG,wDAAgDS,MAAM,CAACC,YAAY,CAAC,IAAI,CAACL,EAAE,EAAE,CAAC,OAAK;YACvK;YACA,IAAI,CAACL,GAAG,EAAE;YACV,IAAI,CAACC,SAAS,CAACwC,IAAI,CAAC,aAAa,CAAC;YAClC,IAAI,CAACW,cAAc,EAAE;YACrB,OAAO,IAAI,CAACG,UAAU,EAAE;UAC1B;QACF,KAAK,aAAa;UAAE;YAChB,IAAI,CAACtD,SAAS,CAACqD,GAAG,EAAE;YACpB,IAAI,IAAI,CAACjD,EAAE,EAAE,KAAK,EAAE,EAAE;cACpB,IAAI,CAACL,GAAG,EAAE;cACV,IAAI,CAACoD,cAAc,EAAE;cACrB,OAAO,IAAI3D,KAAK,CAACC,IAAI,CAAC8D,KAAK,EAAEC,SAAS,EAAE,CAAC,CAAC;YAC5C;YACA,IAAI,CAACxD,SAAS,CAACwC,IAAI,CAAC,aAAa,CAAC;YAClC,IAAI,CAACW,cAAc,EAAE;YACrB,OAAO,IAAI,CAACG,UAAU,EAAE;UAC1B;QACF,KAAK,SAAS;UACZ,IAAI,IAAI,CAAClD,EAAE,EAAE,KAAK,GAAG,EAAE;YACrB,IAAI,CAACJ,SAAS,CAACqD,GAAG,EAAE;YACpB,IAAI,CAACtD,GAAG,EAAE;YACV,IAAI,CAACoD,cAAc,EAAE;YACrB,OAAO,IAAI3D,KAAK,CAACC,IAAI,CAAC8D,KAAK,EAAEC,SAAS,EAAE,CAAC,CAAC;UAC5C;UACA,IAAI,IAAI,CAACpD,EAAE,EAAE,KAAK,EAAE,EAAE;YACpB,MAAM,IAAIE,KAAK,WAAKX,eAAe,+CAAuC,IAAI,CAACI,GAAG,yDAAiDS,MAAM,CAACC,YAAY,CAAC,IAAI,CAACL,EAAE,EAAE,CAAC,OAAK;UACxK;UACA,IAAI,CAACL,GAAG,EAAE;UACV,IAAI,CAACoD,cAAc,EAAE;QACvB,KAAK,WAAW;UAAE;YACd,IAAI,CAACnD,SAAS,CAACqD,GAAG,EAAE;YACpB,IAAI,IAAI,CAACjD,EAAE,EAAE,KAAK,GAAG,EAAE;cACrB,IAAI,CAACL,GAAG,EAAE;cACV,IAAI,CAACoD,cAAc,EAAE;cACrB,OAAO,IAAI3D,KAAK,CAACC,IAAI,CAAC8D,KAAK,EAAEC,SAAS,EAAE,CAAC,CAAC;YAC5C;YACA,IAAMC,KAAK,GAAG,IAAI,CAACZ,WAAW,EAAE;YAChC,IAAI,CAACM,cAAc,EAAE;YACrB,IAAI,IAAI,CAAC/C,EAAE,EAAE,KAAK,EAAE,EAAE;cACpB,MAAM,IAAIE,KAAK,WAAKX,eAAe,+CAAuC,IAAI,CAACI,GAAG,gEAAwDS,MAAM,CAACC,YAAY,CAAC,IAAI,CAACL,EAAE,EAAE,CAAC,OAAK;YAC/K;YACA,IAAI,CAACL,GAAG,EAAE;YACV,IAAI,CAACC,SAAS,CAACwC,IAAI,CAAC,WAAW,CAAC;YAChC,OAAOiB,KAAK;UACd;QACF,KAAK,WAAW;UAAE;YACd,IAAI,CAACzD,SAAS,CAACqD,GAAG,EAAE;YACpB,IAAI,CAACrD,SAAS,CAACwC,IAAI,CAAC,SAAS,CAAC;YAC9B,IAAI,CAACW,cAAc,EAAE;YACrB,OAAO,IAAI,CAACG,UAAU,EAAE;UAC1B;QACF;UACE,MAAM,IAAIhD,KAAK,WAAKX,eAAe,iDAAyC,IAAI,CAACI,GAAG,6BAA2B;MAAC;IAEpH;EAAC;EAAA;AAAA;AAEH,SAAST,MAAM,CAACO,IAAI,EAAEC,OAAO,EAAE;EAC7BA,OAAO,GAAG4D,MAAM,CAACC,MAAM,CAAC;IAAEC,SAAS,EAAE,IAAIhE,SAAS,CAACC,IAAI,EAAEC,OAAO;EAAE,CAAC,EAAEA,OAAO,CAAC;EAC7E,OAAOP,OAAO,CAACM,IAAI,EAAEC,OAAO,CAAC;AAC/B;AACA,SACER,MAAM,EACNM,SAAS"},"metadata":{},"sourceType":"module"}