{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport var createGet = configure(function (api) {\n  /**\n   * @type {ConfigAPI[\"get\"]}\n   */\n  var get = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(key) {\n      var options,\n        res,\n        data,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              if (key) {\n                _context.next = 3;\n                break;\n              }\n              throw new Error('key argument is required');\n            case 3:\n              _context.next = 5;\n              return api.post('config', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: key\n                }, options)),\n                headers: options.headers\n              });\n            case 5:\n              res = _context.sent;\n              _context.next = 8;\n              return res.json();\n            case 8:\n              data = _context.sent;\n              return _context.abrupt(\"return\", data.Value);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function get(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return get;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","createGet","api","get","key","options","Error","post","signal","searchParams","arg","headers","res","json","data","Value"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/ipfs-http-client/src/config/get.js"],"sourcesContent":["import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {ConfigAPI[\"get\"]}\n   */\n  const get = async (key, options = {}) => {\n    if (!key) {\n      throw new Error('key argument is required')\n    }\n\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: key,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Value\n  }\n\n  return get\n})\n"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;;AAElE;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,SAAS,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;EACxC;AACF;AACA;EACE,IAAMC,GAAG;IAAA,sEAAG,iBAAOC,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cAAEC,OAAO,2DAAG,CAAC,CAAC;cAAA,IAC7BD,GAAG;gBAAA;gBAAA;cAAA;cAAA,MACA,IAAIE,KAAK,CAAC,0BAA0B,CAAC;YAAA;cAAA;cAAA,OAG3BJ,GAAG,CAACK,IAAI,CAAC,QAAQ,EAAE;gBACnCC,MAAM,EAAEH,OAAO,CAACG,MAAM;gBACtBC,YAAY,EAAET,iBAAiB;kBAC7BU,GAAG,EAAEN;gBAAG,GACLC,OAAO,EACV;gBACFM,OAAO,EAAEN,OAAO,CAACM;cACnB,CAAC,CAAC;YAAA;cAPIC,GAAG;cAAA;cAAA,OAQUA,GAAG,CAACC,IAAI,EAAE;YAAA;cAAvBC,IAAI;cAAA,iCAEHA,IAAI,CAACC,KAAK;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAClB;IAAA,gBAhBKZ,GAAG;MAAA;IAAA;EAAA,GAgBR;EAED,OAAOA,GAAG;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}