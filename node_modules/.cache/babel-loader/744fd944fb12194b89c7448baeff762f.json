{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { configure } from './lib/configure.js';\nimport errCode from 'err-code';\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport var createStart = configure(function (api) {\n  /**\n   * @type {RootAPI[\"start\"]}\n   */\n  var start = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED');\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function start() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return start;\n});","map":{"version":3,"names":["configure","errCode","createStart","api","start","options","Error"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/ipfs-http-client/src/start.js"],"sourcesContent":["import { configure } from './lib/configure.js'\nimport errCode from 'err-code'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createStart = configure(api => {\n  /**\n   * @type {RootAPI[\"start\"]}\n   */\n  const start = async (options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  return start\n})\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,oBAAoB;AAC9C,OAAOC,OAAO,MAAM,UAAU;;AAE9B;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,WAAW,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;EAC1C;AACF;AACA;EACE,IAAMC,KAAK;IAAA,sEAAG;MAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cAAOC,OAAO,2DAAG,CAAC,CAAC;cAAA,MACzBJ,OAAO,CAAC,IAAIK,KAAK,CAAC,iBAAiB,CAAC,EAAE,qBAAqB,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACnE;IAAA,gBAFKF,KAAK;MAAA;IAAA;EAAA,GAEV;EAED,OAAOA,KAAK;AACd,CAAC,CAAC"},"metadata":{},"sourceType":"module"}