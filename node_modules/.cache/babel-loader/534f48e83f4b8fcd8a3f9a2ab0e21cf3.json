{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { CID } from 'multiformats/cid';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Pin} Pin\n * @typedef {import('ipfs-core-types/src/pin/remote').AddOptions} AddOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Query} Query\n * @typedef {import('ipfs-core-types/src/pin/remote').Status} Status\n */\n\n/**\n * @param {object} json\n * @param {string} json.Name\n * @param {string} json.Cid\n * @param {Status} json.Status\n * @returns {Pin}\n */\nexport var decodePin = function decodePin(_ref) {\n  var name = _ref.Name,\n    status = _ref.Status,\n    cid = _ref.Cid;\n  return {\n    cid: CID.parse(cid),\n    name: name,\n    status: status\n  };\n};\n\n/**\n * @param {any} service\n * @returns {string}\n */\nexport var encodeService = function encodeService(service) {\n  if (typeof service === 'string' && service !== '') {\n    return service;\n  } else {\n    throw new TypeError('service name must be passed');\n  }\n};\n\n/**\n * @param {any} cid\n * @returns {string}\n */\nexport var encodeCID = function encodeCID(cid) {\n  if (CID.asCID(cid)) {\n    return cid.toString();\n  } else {\n    throw new TypeError(\"CID instance expected instead of \".concat(typeof cid));\n  }\n};\n\n/**\n * @param {Query & { all?: boolean }} query\n * @returns {URLSearchParams}\n */\nexport var encodeQuery = function encodeQuery(_ref2) {\n  var service = _ref2.service,\n    cid = _ref2.cid,\n    name = _ref2.name,\n    status = _ref2.status,\n    all = _ref2.all;\n  var query = toUrlSearchParams({\n    service: encodeService(service),\n    name: name,\n    force: all ? true : undefined\n  });\n  if (cid) {\n    var _iterator = _createForOfIteratorHelper(cid),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var value = _step.value;\n        query.append('cid', encodeCID(value));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  if (status) {\n    var _iterator2 = _createForOfIteratorHelper(status),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _value = _step2.value;\n        query.append('status', _value);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n  return query;\n};\n\n/**\n * @param {AddOptions & {cid:CID}} options\n * @returns {URLSearchParams}\n */\nexport var encodeAddParams = function encodeAddParams(_ref3) {\n  var cid = _ref3.cid,\n    service = _ref3.service,\n    background = _ref3.background,\n    name = _ref3.name,\n    origins = _ref3.origins;\n  var params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name: name,\n    background: background ? true : undefined\n  });\n  if (origins) {\n    var _iterator3 = _createForOfIteratorHelper(origins),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var origin = _step3.value;\n        params.append('origin', origin.toString());\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n  return params;\n};","map":{"version":3,"names":["CID","toUrlSearchParams","decodePin","name","Name","status","Status","cid","Cid","parse","encodeService","service","TypeError","encodeCID","asCID","toString","encodeQuery","all","query","force","undefined","value","append","encodeAddParams","background","origins","params","arg","origin"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/ipfs-http-client/src/pin/remote/utils.js"],"sourcesContent":["import { CID } from 'multiformats/cid'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Pin} Pin\n * @typedef {import('ipfs-core-types/src/pin/remote').AddOptions} AddOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Query} Query\n * @typedef {import('ipfs-core-types/src/pin/remote').Status} Status\n */\n\n/**\n * @param {object} json\n * @param {string} json.Name\n * @param {string} json.Cid\n * @param {Status} json.Status\n * @returns {Pin}\n */\nexport const decodePin = ({ Name: name, Status: status, Cid: cid }) => {\n  return {\n    cid: CID.parse(cid),\n    name,\n    status\n  }\n}\n\n/**\n * @param {any} service\n * @returns {string}\n */\nexport const encodeService = (service) => {\n  if (typeof service === 'string' && service !== '') {\n    return service\n  } else {\n    throw new TypeError('service name must be passed')\n  }\n}\n\n/**\n * @param {any} cid\n * @returns {string}\n */\nexport const encodeCID = (cid) => {\n  if (CID.asCID(cid)) {\n    return cid.toString()\n  } else {\n    throw new TypeError(`CID instance expected instead of ${typeof cid}`)\n  }\n}\n\n/**\n * @param {Query & { all?: boolean }} query\n * @returns {URLSearchParams}\n */\nexport const encodeQuery = ({ service, cid, name, status, all }) => {\n  const query = toUrlSearchParams({\n    service: encodeService(service),\n    name,\n    force: all ? true : undefined\n  })\n\n  if (cid) {\n    for (const value of cid) {\n      query.append('cid', encodeCID(value))\n    }\n  }\n\n  if (status) {\n    for (const value of status) {\n      query.append('status', value)\n    }\n  }\n\n  return query\n}\n\n/**\n * @param {AddOptions & {cid:CID}} options\n * @returns {URLSearchParams}\n */\nexport const encodeAddParams = ({ cid, service, background, name, origins }) => {\n  const params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name,\n    background: background ? true : undefined\n  })\n\n  if (origins) {\n    for (const origin of origins) {\n      params.append('origin', origin.toString())\n    }\n  }\n\n  return params\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}