{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _awaitAsyncGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _asyncIterator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { mapEvent } from './map-event.js';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n * @typedef {import('multiformats/cid').CID} CID\n */\n\nexport var createProvide = configure(function (api) {\n  /**\n   * @type {DHTAPI[\"provide\"]}\n   */\n  function provide(_x) {\n    return _provide.apply(this, arguments);\n  }\n  function _provide() {\n    _provide = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(cids) {\n      var options,\n        cidArr,\n        res,\n        _iteratorAbruptCompletion,\n        _didIteratorError,\n        _iteratorError,\n        _iterator,\n        _step,\n        event,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {\n                recursive: false\n              };\n              /** @type {CID[]} */\n              cidArr = Array.isArray(cids) ? cids : [cids];\n              _context.next = 4;\n              return _awaitAsyncGenerator(api.post('dht/provide', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: cidArr.map(function (cid) {\n                    return cid.toString();\n                  })\n                }, options)),\n                headers: options.headers\n              }));\n            case 4:\n              res = _context.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 7;\n              _iterator = _asyncIterator(res.ndjson());\n            case 9:\n              _context.next = 11;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 11:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 18;\n                break;\n              }\n              event = _step.value;\n              _context.next = 15;\n              return mapEvent(event);\n            case 15:\n              _iteratorAbruptCompletion = false;\n              _context.next = 9;\n              break;\n            case 18:\n              _context.next = 24;\n              break;\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](7);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n            case 24:\n              _context.prev = 24;\n              _context.prev = 25;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 29;\n                break;\n              }\n              _context.next = 29;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 29:\n              _context.prev = 29;\n              if (!_didIteratorError) {\n                _context.next = 32;\n                break;\n              }\n              throw _iteratorError;\n            case 32:\n              return _context.finish(29);\n            case 33:\n              return _context.finish(24);\n            case 34:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[7, 20, 24, 34], [25,, 29, 33]]);\n    }));\n    return _provide.apply(this, arguments);\n  }\n  return provide;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","mapEvent","createProvide","api","provide","cids","options","recursive","cidArr","Array","isArray","post","signal","searchParams","arg","map","cid","toString","headers","res","ndjson","event"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/ipfs-http-client/src/dht/provide.js"],"sourcesContent":["import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n * @typedef {import('multiformats/cid').CID} CID\n */\n\nexport const createProvide = configure(api => {\n  /**\n   * @type {DHTAPI[\"provide\"]}\n   */\n  async function * provide (cids, options = { recursive: false }) {\n    /** @type {CID[]} */\n    const cidArr = Array.isArray(cids) ? cids : [cids]\n\n    const res = await api.post('dht/provide', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cidArr.map(cid => cid.toString()),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return provide\n})\n"],"mappings":";;;;;AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,QAAQ,QAAQ,gBAAgB;;AAEzC;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,aAAa,GAAGH,SAAS,CAAC,UAAAI,GAAG,EAAI;EAC5C;AACF;AACA;EAFE,SAGiBC,OAAO;IAAA;EAAA;EAAA;IAAA,wEAAxB,iBAA0BC,IAAI;MAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cAAEC,OAAO,2DAAG;gBAAEC,SAAS,EAAE;cAAM,CAAC;cAC5D;cACMC,MAAM,GAAGC,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,CAAC;cAAA;cAAA,4BAEhCF,GAAG,CAACQ,IAAI,CAAC,aAAa,EAAE;gBACxCC,MAAM,EAAEN,OAAO,CAACM,MAAM;gBACtBC,YAAY,EAAEb,iBAAiB;kBAC7Bc,GAAG,EAAEN,MAAM,CAACO,GAAG,CAAC,UAAAC,GAAG;oBAAA,OAAIA,GAAG,CAACC,QAAQ,EAAE;kBAAA;gBAAC,GACnCX,OAAO,EACV;gBACFY,OAAO,EAAEZ,OAAO,CAACY;cACnB,CAAC,CAAC;YAAA;cAPIC,GAAG;cAAA;cAAA;cAAA;cAAA,2BASiBA,GAAG,CAACC,MAAM,EAAE;YAAA;cAAA;cAAA;YAAA;cAAA;gBAAA;gBAAA;cAAA;cAArBC,KAAK;cAAA;cACpB,OAAMpB,QAAQ,CAACoB,KAAK,CAAC;YAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;YAAA;cAAA;YAAA;cAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAExB;IAAA;EAAA;EAED,OAAOjB,OAAO;AAChB,CAAC,CAAC"},"metadata":{},"sourceType":"module"}