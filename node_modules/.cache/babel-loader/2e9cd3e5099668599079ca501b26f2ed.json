{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { toUrlSearchParams } from '../../../lib/to-url-search-params.js';\nimport { encodeEndpoint } from './utils.js';\n\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\nexport function createAdd(client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"add\"]}\n   */\n  function add(_x, _x2) {\n    return _add.apply(this, arguments);\n  }\n  function _add() {\n    _add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(name, options) {\n      var endpoint, key, headers, timeout, signal;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              endpoint = options.endpoint, key = options.key, headers = options.headers, timeout = options.timeout, signal = options.signal;\n              _context.next = 3;\n              return client.post('pin/remote/service/add', {\n                timeout: timeout,\n                signal: signal,\n                searchParams: toUrlSearchParams({\n                  arg: [name, encodeEndpoint(endpoint), key]\n                }),\n                headers: headers\n              });\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _add.apply(this, arguments);\n  }\n  return add;\n}","map":{"version":3,"names":["toUrlSearchParams","encodeEndpoint","createAdd","client","add","name","options","endpoint","key","headers","timeout","signal","post","searchParams","arg"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/ipfs-http-client/src/pin/remote/service/add.js"],"sourcesContent":["import { toUrlSearchParams } from '../../../lib/to-url-search-params.js'\nimport { encodeEndpoint } from './utils.js'\n\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\nexport function createAdd (client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"add\"]}\n   */\n  async function add (name, options) {\n    const { endpoint, key, headers, timeout, signal } = options\n\n    await client.post('pin/remote/service/add', {\n      timeout,\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: [name, encodeEndpoint(endpoint), key]\n      }),\n      headers\n    })\n  }\n\n  return add\n}\n"],"mappings":";;AAAA,SAASA,iBAAiB,QAAQ,sCAAsC;AACxE,SAASC,cAAc,QAAQ,YAAY;;AAE3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,SAASC,SAAS,CAAEC,MAAM,EAAE;EACjC;AACF;AACA;EAFE,SAGeC,GAAG;IAAA;EAAA;EAAA;IAAA,kEAAlB,iBAAoBC,IAAI,EAAEC,OAAO;MAAA;MAAA;QAAA;UAAA;YAAA;cACvBC,QAAQ,GAAoCD,OAAO,CAAnDC,QAAQ,EAAEC,GAAG,GAA+BF,OAAO,CAAzCE,GAAG,EAAEC,OAAO,GAAsBH,OAAO,CAApCG,OAAO,EAAEC,OAAO,GAAaJ,OAAO,CAA3BI,OAAO,EAAEC,MAAM,GAAKL,OAAO,CAAlBK,MAAM;cAAA;cAAA,OAEzCR,MAAM,CAACS,IAAI,CAAC,wBAAwB,EAAE;gBAC1CF,OAAO,EAAPA,OAAO;gBACPC,MAAM,EAANA,MAAM;gBACNE,YAAY,EAAEb,iBAAiB,CAAC;kBAC9Bc,GAAG,EAAE,CAACT,IAAI,EAAEJ,cAAc,CAACM,QAAQ,CAAC,EAAEC,GAAG;gBAC3C,CAAC,CAAC;gBACFC,OAAO,EAAPA;cACF,CAAC,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACH;IAAA;EAAA;EAED,OAAOL,GAAG;AACZ"},"metadata":{},"sourceType":"module"}