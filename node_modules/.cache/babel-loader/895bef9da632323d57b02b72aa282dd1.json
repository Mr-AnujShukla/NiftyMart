{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { abortSignal } from '../lib/abort-signal.js';\nimport { textToUrlSafeRpc } from '../lib/http-rpc-wire-format.js';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n */\n\nexport var createPublish = configure(function (api) {\n  /**\n   * @type {PubsubAPI[\"publish\"]}\n   */\n  function publish(_x, _x2) {\n    return _publish.apply(this, arguments);\n  }\n  function _publish() {\n    _publish = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(topic, data) {\n      var options,\n        searchParams,\n        controller,\n        signal,\n        res,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n              searchParams = toUrlSearchParams(_objectSpread({\n                arg: textToUrlSafeRpc(topic)\n              }, options)); // allow aborting requests on body errors\n              controller = new AbortController();\n              signal = abortSignal(controller.signal, options.signal);\n              _context.t0 = api;\n              _context.t1 = _objectSpread;\n              _context.t2 = {\n                signal: signal,\n                searchParams: searchParams\n              };\n              _context.next = 9;\n              return multipartRequest([data], controller, options.headers);\n            case 9:\n              _context.t3 = _context.sent;\n              _context.t4 = (0, _context.t1)(_context.t2, _context.t3);\n              _context.next = 13;\n              return _context.t0.post.call(_context.t0, 'pubsub/pub', _context.t4);\n            case 13:\n              res = _context.sent;\n              _context.next = 16;\n              return res.text();\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _publish.apply(this, arguments);\n  }\n  return publish;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","multipartRequest","abortSignal","textToUrlSafeRpc","createPublish","api","publish","topic","data","options","searchParams","arg","controller","AbortController","signal","headers","post","res","text"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/ipfs-http-client/src/pubsub/publish.js"],"sourcesContent":["import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { abortSignal } from '../lib/abort-signal.js'\nimport { textToUrlSafeRpc } from '../lib/http-rpc-wire-format.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n */\n\nexport const createPublish = configure(api => {\n  /**\n   * @type {PubsubAPI[\"publish\"]}\n   */\n  async function publish (topic, data, options = {}) {\n    const searchParams = toUrlSearchParams({\n      arg: textToUrlSafeRpc(topic),\n      ...options\n    })\n\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('pubsub/pub', {\n      signal,\n      searchParams,\n      ...(\n        await multipartRequest([data], controller, options.headers)\n      )\n    })\n\n    await res.text()\n  }\n  return publish\n})\n"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,gBAAgB,QAAQ,gCAAgC;;AAEjE;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,aAAa,GAAGL,SAAS,CAAC,UAAAM,GAAG,EAAI;EAC5C;AACF;AACA;EAFE,SAGeC,OAAO;IAAA;EAAA;EAAA;IAAA,sEAAtB,iBAAwBC,KAAK,EAAEC,IAAI;MAAA;QAAA;QAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cAAEC,OAAO,2DAAG,CAAC,CAAC;cACzCC,YAAY,GAAGV,iBAAiB;gBACpCW,GAAG,EAAER,gBAAgB,CAACI,KAAK;cAAC,GACzBE,OAAO,EACV,EAEF;cACMG,UAAU,GAAG,IAAIC,eAAe,EAAE;cAClCC,MAAM,GAAGZ,WAAW,CAACU,UAAU,CAACE,MAAM,EAAEL,OAAO,CAACK,MAAM,CAAC;cAAA,cAE3CT,GAAG;cAAA;cAAA;gBACnBS,MAAM,EAANA,MAAM;gBACNJ,YAAY,EAAZA;cAAY;cAAA;cAAA,OAEJT,gBAAgB,CAAC,CAACO,IAAI,CAAC,EAAEI,UAAU,EAAEH,OAAO,CAACM,OAAO,CAAC;YAAA;cAAA;cAAA;cAAA;cAAA,mBAJzCC,IAAI,mBAAC,YAAY;YAAA;cAAjCC,GAAG;cAAA;cAAA,OAQHA,GAAG,CAACC,IAAI,EAAE;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACjB;IAAA;EAAA;EACD,OAAOZ,OAAO;AAChB,CAAC,CAAC"},"metadata":{},"sourceType":"module"}