{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _wrapAsyncGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport var createCat = configure(function (api) {\n  /**\n   * @type {RootAPI[\"cat\"]}\n   */\n  function cat(_x) {\n    return _cat.apply(this, arguments);\n  }\n  function _cat() {\n    _cat = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(path) {\n      var options,\n        res,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return _awaitAsyncGenerator(api.post('cat', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: path.toString()\n                }, options)),\n                headers: options.headers\n              }));\n            case 3:\n              res = _context.sent;\n              return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(res.iterator()), _awaitAsyncGenerator), \"t0\", 5);\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _cat.apply(this, arguments);\n  }\n  return cat;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","createCat","api","cat","path","options","post","signal","searchParams","arg","toString","headers","res","iterator"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/ipfs-http-client/src/cat.js"],"sourcesContent":["import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createCat = configure(api => {\n  /**\n   * @type {RootAPI[\"cat\"]}\n   */\n  async function * cat (path, options = {}) {\n    const res = await api.post('cat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    yield * res.iterator()\n  }\n\n  return cat\n})\n"],"mappings":";;;;;;AAAA,SAASA,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,iBAAiB,QAAQ,+BAA+B;;AAEjE;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,SAAS,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;EACxC;AACF;AACA;EAFE,SAGiBC,GAAG;IAAA;EAAA;EAAA;IAAA,oEAApB,iBAAsBC,IAAI;MAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cAAEC,OAAO,2DAAG,CAAC,CAAC;cAAA;cAAA,4BACpBH,GAAG,CAACI,IAAI,CAAC,KAAK,EAAE;gBAChCC,MAAM,EAAEF,OAAO,CAACE,MAAM;gBACtBC,YAAY,EAAER,iBAAiB;kBAC7BS,GAAG,EAAEL,IAAI,CAACM,QAAQ;gBAAE,GACjBL,OAAO,EACV;gBACFM,OAAO,EAAEN,OAAO,CAACM;cACnB,CAAC,CAAC;YAAA;cAPIC,GAAG;cAST,qEAAQA,GAAG,CAACC,QAAQ,EAAE;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACvB;IAAA;EAAA;EAED,OAAOV,GAAG;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}