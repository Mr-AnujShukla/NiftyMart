{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport var createCp = configure(function (api) {\n  /**\n   * @type {FilesAPI[\"cp\"]}\n   */\n  function cp(_x, _x2) {\n    return _cp.apply(this, arguments);\n  }\n  function _cp() {\n    _cp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(sources, destination) {\n      var options,\n        sourceArr,\n        res,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n              /** @type {import('ipfs-core-types/src/utils').IPFSPath[]} */\n              sourceArr = Array.isArray(sources) ? sources : [sources];\n              _context.next = 4;\n              return api.post('files/cp', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: sourceArr.concat(destination).map(function (src) {\n                    return CID.asCID(src) ? \"/ipfs/\".concat(src) : src;\n                  })\n                }, options)),\n                headers: options.headers\n              });\n            case 4:\n              res = _context.sent;\n              _context.next = 7;\n              return res.text();\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _cp.apply(this, arguments);\n  }\n  return cp;\n});","map":{"version":3,"names":["CID","configure","toUrlSearchParams","createCp","api","cp","sources","destination","options","sourceArr","Array","isArray","post","signal","searchParams","arg","concat","map","src","asCID","headers","res","text"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/ipfs-http-client/src/files/cp.js"],"sourcesContent":["import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createCp = configure(api => {\n  /**\n   * @type {FilesAPI[\"cp\"]}\n   */\n  async function cp (sources, destination, options = {}) {\n    /** @type {import('ipfs-core-types/src/utils').IPFSPath[]} */\n    const sourceArr = Array.isArray(sources) ? sources : [sources]\n\n    const res = await api.post('files/cp', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sourceArr.concat(destination).map(src => CID.asCID(src) ? `/ipfs/${src}` : src),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return cp\n})\n"],"mappings":";;;AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;;AAElE;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,QAAQ,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;EACvC;AACF;AACA;EAFE,SAGeC,EAAE;IAAA;EAAA;EAAA;IAAA,iEAAjB,iBAAmBC,OAAO,EAAEC,WAAW;MAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cAAEC,OAAO,2DAAG,CAAC,CAAC;cACnD;cACMC,SAAS,GAAGC,KAAK,CAACC,OAAO,CAACL,OAAO,CAAC,GAAGA,OAAO,GAAG,CAACA,OAAO,CAAC;cAAA;cAAA,OAE5CF,GAAG,CAACQ,IAAI,CAAC,UAAU,EAAE;gBACrCC,MAAM,EAAEL,OAAO,CAACK,MAAM;gBACtBC,YAAY,EAAEZ,iBAAiB;kBAC7Ba,GAAG,EAAEN,SAAS,CAACO,MAAM,CAACT,WAAW,CAAC,CAACU,GAAG,CAAC,UAAAC,GAAG;oBAAA,OAAIlB,GAAG,CAACmB,KAAK,CAACD,GAAG,CAAC,mBAAYA,GAAG,IAAKA,GAAG;kBAAA;gBAAC,GACjFV,OAAO,EACV;gBACFY,OAAO,EAAEZ,OAAO,CAACY;cACnB,CAAC,CAAC;YAAA;cAPIC,GAAG;cAAA;cAAA,OASHA,GAAG,CAACC,IAAI,EAAE;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACjB;IAAA;EAAA;EACD,OAAOjB,EAAE;AACX,CAAC,CAAC"},"metadata":{},"sourceType":"module"}