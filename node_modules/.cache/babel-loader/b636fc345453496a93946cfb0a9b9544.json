{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import Web3 from'web3';import{setGlobalState,getGlobalState,setAlert}from'./store';import abi from'./abis/TimelessNFT.json';var _window=window,ethereum=_window.ethereum;window.web3=new Web3(ethereum);window.web3=new Web3(window.web3.currentProvider);var getEtheriumContract=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var connectedAccount,web3,networkId,networkData,contract;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:connectedAccount=getGlobalState('connectedAccount');if(!connectedAccount){_context.next=15;break;}web3=window.web3;_context.next=5;return web3.eth.net.getId();case 5:networkId=_context.sent;networkData=abi.networks[networkId];if(!networkData){_context.next=12;break;}contract=new web3.eth.Contract(abi.abi,networkData.address);return _context.abrupt(\"return\",contract);case 12:return _context.abrupt(\"return\",null);case 13:_context.next=16;break;case 15:return _context.abrupt(\"return\",getGlobalState('contract'));case 16:case\"end\":return _context.stop();}}},_callee);}));return function getEtheriumContract(){return _ref.apply(this,arguments);};}();var connectWallet=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var accounts;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;if(ethereum){_context2.next=3;break;}return _context2.abrupt(\"return\",alert('Please install Metamask'));case 3:_context2.next=5;return ethereum.request({method:'eth_requestAccounts'});case 5:accounts=_context2.sent;setGlobalState('connectedAccount',accounts[0].toLowerCase());_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);reportError(_context2.t0);case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function connectWallet(){return _ref2.apply(this,arguments);};}();var isWallectConnected=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){var accounts;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;if(ethereum){_context4.next=3;break;}return _context4.abrupt(\"return\",alert('Please install Metamask'));case 3:_context4.next=5;return ethereum.request({method:'eth_accounts'});case 5:accounts=_context4.sent;window.ethereum.on('chainChanged',function(chainId){window.location.reload();});window.ethereum.on('accountsChanged',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:setGlobalState('connectedAccount',accounts[0].toLowerCase());_context3.next=3;return isWallectConnected();case 3:case\"end\":return _context3.stop();}}},_callee3);})));if(accounts.length){setGlobalState('connectedAccount',accounts[0].toLowerCase());}else{alert('Please connect wallet.');console.log('No accounts found.');}_context4.next=14;break;case 11:_context4.prev=11;_context4.t0=_context4[\"catch\"](0);reportError(_context4.t0);case 14:case\"end\":return _context4.stop();}}},_callee4,null,[[0,11]]);}));return function isWallectConnected(){return _ref3.apply(this,arguments);};}();var structuredNfts=function structuredNfts(nfts){return nfts.map(function(nft){return{id:Number(nft.id),owner:nft.owner.toLowerCase(),cost:window.web3.utils.fromWei(nft.cost),title:nft.title,description:nft.description,metadataURI:nft.metadataURI,timestamp:nft.timestamp};}).reverse();};var getAllNFTs=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(){var contract,nfts,transactions;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;if(ethereum){_context5.next=3;break;}return _context5.abrupt(\"return\",alert('Please install Metamask'));case 3:_context5.next=5;return getEtheriumContract();case 5:contract=_context5.sent;_context5.next=8;return contract.methods.getAllNFTs().call();case 8:nfts=_context5.sent;_context5.next=11;return contract.methods.getAllTransactions().call();case 11:transactions=_context5.sent;setGlobalState('nfts',structuredNfts(nfts));setGlobalState('transactions',structuredNfts(transactions));_context5.next=19;break;case 16:_context5.prev=16;_context5.t0=_context5[\"catch\"](0);reportError(_context5.t0);case 19:case\"end\":return _context5.stop();}}},_callee5,null,[[0,16]]);}));return function getAllNFTs(){return _ref5.apply(this,arguments);};}();var mintNFT=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(_ref6){var title,description,metadataURI,price,contract,account,mintPrice;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:title=_ref6.title,description=_ref6.description,metadataURI=_ref6.metadataURI,price=_ref6.price;_context6.prev=1;price=window.web3.utils.toWei(price.toString(),'ether');_context6.next=5;return getEtheriumContract();case 5:contract=_context6.sent;account=getGlobalState('connectedAccount');mintPrice=window.web3.utils.toWei('0.01','ether');_context6.next=10;return contract.methods.payToMint(title,description,metadataURI,price).send({from:account,value:mintPrice});case 10:return _context6.abrupt(\"return\",true);case 13:_context6.prev=13;_context6.t0=_context6[\"catch\"](1);reportError(_context6.t0);case 16:case\"end\":return _context6.stop();}}},_callee6,null,[[1,13]]);}));return function mintNFT(_x){return _ref7.apply(this,arguments);};}();var buyNFT=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(_ref8){var id,cost,contract,buyer;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:id=_ref8.id,cost=_ref8.cost;_context7.prev=1;cost=window.web3.utils.toWei(cost.toString(),'ether');_context7.next=5;return getEtheriumContract();case 5:contract=_context7.sent;buyer=getGlobalState('connectedAccount');_context7.next=9;return contract.methods.payToBuy(Number(id)).send({from:buyer,value:cost});case 9:return _context7.abrupt(\"return\",true);case 12:_context7.prev=12;_context7.t0=_context7[\"catch\"](1);reportError(_context7.t0);case 15:case\"end\":return _context7.stop();}}},_callee7,null,[[1,12]]);}));return function buyNFT(_x2){return _ref9.apply(this,arguments);};}();var updateNFT=/*#__PURE__*/function(){var _ref11=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(_ref10){var id,cost,contract,buyer;return _regeneratorRuntime().wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:id=_ref10.id,cost=_ref10.cost;_context8.prev=1;cost=window.web3.utils.toWei(cost.toString(),'ether');_context8.next=5;return getEtheriumContract();case 5:contract=_context8.sent;buyer=getGlobalState('connectedAccount');_context8.next=9;return contract.methods.changePrice(Number(id),cost).send({from:buyer});case 9:_context8.next=14;break;case 11:_context8.prev=11;_context8.t0=_context8[\"catch\"](1);reportError(_context8.t0);case 14:case\"end\":return _context8.stop();}}},_callee8,null,[[1,11]]);}));return function updateNFT(_x3){return _ref11.apply(this,arguments);};}();var reportError=function reportError(error){setAlert(JSON.stringify(error),'red');throw new Error('No ethereum object.');};export{getAllNFTs,connectWallet,mintNFT,buyNFT,updateNFT,isWallectConnected};","map":{"version":3,"names":["Web3","setGlobalState","getGlobalState","setAlert","abi","window","ethereum","web3","currentProvider","getEtheriumContract","connectedAccount","eth","net","getId","networkId","networkData","networks","contract","Contract","address","connectWallet","alert","request","method","accounts","toLowerCase","reportError","isWallectConnected","on","chainId","location","reload","length","console","log","structuredNfts","nfts","map","nft","id","Number","owner","cost","utils","fromWei","title","description","metadataURI","timestamp","reverse","getAllNFTs","methods","call","getAllTransactions","transactions","mintNFT","price","toWei","toString","account","mintPrice","payToMint","send","from","value","buyNFT","buyer","payToBuy","updateNFT","changePrice","error","JSON","stringify","Error"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/src/Blockchain.Services.jsx"],"sourcesContent":["import Web3 from 'web3'\r\nimport { setGlobalState, getGlobalState, setAlert } from './store'\r\nimport abi from './abis/TimelessNFT.json'\r\n\r\nconst { ethereum } = window\r\nwindow.web3 = new Web3(ethereum)\r\nwindow.web3 = new Web3(window.web3.currentProvider)\r\n\r\nconst getEtheriumContract = async () => {\r\n  const connectedAccount = getGlobalState('connectedAccount')\r\n\r\n  if (connectedAccount) {\r\n    const web3 = window.web3\r\n    const networkId = await web3.eth.net.getId()\r\n    const networkData = abi.networks[networkId]\r\n\r\n    if (networkData) {\r\n      const contract = new web3.eth.Contract(abi.abi, networkData.address)\r\n      return contract\r\n    } else {\r\n      return null\r\n    }\r\n  } else {\r\n    return getGlobalState('contract')\r\n  }\r\n}\r\n\r\nconst connectWallet = async () => {\r\n  try {\r\n    if (!ethereum) return alert('Please install Metamask')\r\n    const accounts = await ethereum.request({ method: 'eth_requestAccounts' })\r\n    setGlobalState('connectedAccount', accounts[0].toLowerCase())\r\n  } catch (error) {\r\n    reportError(error)\r\n  }\r\n}\r\n\r\nconst isWallectConnected = async () => {\r\n  try {\r\n    if (!ethereum) return alert('Please install Metamask')\r\n    const accounts = await ethereum.request({ method: 'eth_accounts' })\r\n\r\n    window.ethereum.on('chainChanged', (chainId) => {\r\n      window.location.reload()\r\n    })\r\n\r\n    window.ethereum.on('accountsChanged', async () => {\r\n      setGlobalState('connectedAccount', accounts[0].toLowerCase())\r\n      await isWallectConnected()\r\n    })\r\n\r\n    if (accounts.length) {\r\n      setGlobalState('connectedAccount', accounts[0].toLowerCase())\r\n    } else {\r\n      alert('Please connect wallet.')\r\n      console.log('No accounts found.')\r\n    }\r\n  } catch (error) {\r\n    reportError(error)\r\n  }\r\n}\r\n\r\nconst structuredNfts = (nfts) => {\r\n  return nfts\r\n    .map((nft) => ({\r\n      id: Number(nft.id),\r\n      owner: nft.owner.toLowerCase(),\r\n      cost: window.web3.utils.fromWei(nft.cost),\r\n      title: nft.title,\r\n      description: nft.description,\r\n      metadataURI: nft.metadataURI,\r\n      timestamp: nft.timestamp,\r\n    }))\r\n    .reverse()\r\n}\r\n\r\nconst getAllNFTs = async () => {\r\n  try {\r\n    if (!ethereum) return alert('Please install Metamask')\r\n\r\n    const contract = await getEtheriumContract()\r\n    const nfts = await contract.methods.getAllNFTs().call()\r\n    const transactions = await contract.methods.getAllTransactions().call()\r\n\r\n    setGlobalState('nfts', structuredNfts(nfts))\r\n    setGlobalState('transactions', structuredNfts(transactions))\r\n  } catch (error) {\r\n    reportError(error)\r\n  }\r\n}\r\n\r\nconst mintNFT = async ({ title, description, metadataURI, price }) => {\r\n  try {\r\n    price = window.web3.utils.toWei(price.toString(), 'ether')\r\n    const contract = await getEtheriumContract()\r\n    const account = getGlobalState('connectedAccount')\r\n    const mintPrice = window.web3.utils.toWei('0.01', 'ether')\r\n\r\n    await contract.methods\r\n      .payToMint(title, description, metadataURI, price)\r\n      .send({ from: account, value: mintPrice })\r\n\r\n    return true\r\n  } catch (error) {\r\n    reportError(error)\r\n  }\r\n}\r\n\r\nconst buyNFT = async ({ id, cost }) => {\r\n  try {\r\n    cost = window.web3.utils.toWei(cost.toString(), 'ether')\r\n    const contract = await getEtheriumContract()\r\n    const buyer = getGlobalState('connectedAccount')\r\n\r\n    await contract.methods\r\n      .payToBuy(Number(id))\r\n      .send({ from: buyer, value: cost })\r\n\r\n    return true\r\n  } catch (error) {\r\n    reportError(error)\r\n  }\r\n}\r\n\r\nconst updateNFT = async ({ id, cost }) => {\r\n  try {\r\n    cost = window.web3.utils.toWei(cost.toString(), 'ether')\r\n    const contract = await getEtheriumContract()\r\n    const buyer = getGlobalState('connectedAccount')\r\n\r\n    await contract.methods.changePrice(Number(id), cost).send({ from: buyer })\r\n  } catch (error) {\r\n    reportError(error)\r\n  }\r\n}\r\n\r\nconst reportError = (error) => {\r\n  setAlert(JSON.stringify(error), 'red')\r\n  throw new Error('No ethereum object.')\r\n}\r\n\r\nexport {\r\n  getAllNFTs,\r\n  connectWallet,\r\n  mintNFT,\r\n  buyNFT,\r\n  updateNFT,\r\n  isWallectConnected,\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}