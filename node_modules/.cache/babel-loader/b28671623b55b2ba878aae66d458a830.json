{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport var createNew = configure(function (api) {\n  /**\n   * @type {ObjectAPI[\"new\"]}\n   */\n  function newObject() {\n    return _newObject.apply(this, arguments);\n  }\n  function _newObject() {\n    _newObject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n        res,\n        _yield$res$json,\n        Hash,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _context.next = 3;\n              return api.post('object/new', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: options.template\n                }, options)),\n                headers: options.headers\n              });\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n            case 6:\n              _yield$res$json = _context.sent;\n              Hash = _yield$res$json.Hash;\n              return _context.abrupt(\"return\", CID.parse(Hash));\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _newObject.apply(this, arguments);\n  }\n  return newObject;\n});","map":{"version":3,"names":["CID","configure","toUrlSearchParams","createNew","api","newObject","options","post","signal","searchParams","arg","template","headers","res","json","Hash","parse"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/ipfs-http-client/src/object/new.js"],"sourcesContent":["import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createNew = configure(api => {\n  /**\n   * @type {ObjectAPI[\"new\"]}\n   */\n  async function newObject (options = {}) {\n    const res = await api.post('object/new', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.template,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n  return newObject\n})\n"],"mappings":";;;AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;;AAElE;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,SAAS,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;EACxC;AACF;AACA;EAFE,SAGeC,SAAS;IAAA;EAAA;EAAA;IAAA,wEAAxB;MAAA;QAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cAA0BC,OAAO,2DAAG,CAAC,CAAC;cAAA;cAAA,OAClBF,GAAG,CAACG,IAAI,CAAC,YAAY,EAAE;gBACvCC,MAAM,EAAEF,OAAO,CAACE,MAAM;gBACtBC,YAAY,EAAEP,iBAAiB;kBAC7BQ,GAAG,EAAEJ,OAAO,CAACK;gBAAQ,GAClBL,OAAO,EACV;gBACFM,OAAO,EAAEN,OAAO,CAACM;cACnB,CAAC,CAAC;YAAA;cAPIC,GAAG;cAAA;cAAA,OAScA,GAAG,CAACC,IAAI,EAAE;YAAA;cAAA;cAAzBC,IAAI,mBAAJA,IAAI;cAAA,iCAELf,GAAG,CAACgB,KAAK,CAACD,IAAI,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACvB;IAAA;EAAA;EACD,OAAOV,SAAS;AAClB,CAAC,CAAC"},"metadata":{},"sourceType":"module"}