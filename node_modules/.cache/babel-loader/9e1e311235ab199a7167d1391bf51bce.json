{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport var createCommands = configure(function (api) {\n  /**\n   * @type {RootAPI[\"commands\"]}\n   */\n  var commands = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n        res,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _context.next = 3;\n              return api.post('commands', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(options),\n                headers: options.headers\n              });\n            case 3:\n              res = _context.sent;\n              return _context.abrupt(\"return\", res.json());\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function commands() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return commands;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","createCommands","api","commands","options","post","signal","searchParams","headers","res","json"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/ipfs-http-client/src/commands.js"],"sourcesContent":["import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createCommands = configure(api => {\n  /**\n   * @type {RootAPI[\"commands\"]}\n   */\n  const commands = async (options = {}) => {\n    const res = await api.post('commands', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return commands\n})\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,iBAAiB,QAAQ,+BAA+B;;AAEjE;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,cAAc,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;EAC7C;AACF;AACA;EACE,IAAMC,QAAQ;IAAA,sEAAG;MAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cAAOC,OAAO,2DAAG,CAAC,CAAC;cAAA;cAAA,OAChBF,GAAG,CAACG,IAAI,CAAC,UAAU,EAAE;gBACrCC,MAAM,EAAEF,OAAO,CAACE,MAAM;gBACtBC,YAAY,EAAEP,iBAAiB,CAACI,OAAO,CAAC;gBACxCI,OAAO,EAAEJ,OAAO,CAACI;cACnB,CAAC,CAAC;YAAA;cAJIC,GAAG;cAAA,iCAMFA,GAAG,CAACC,IAAI,EAAE;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAClB;IAAA,gBARKP,QAAQ;MAAA;IAAA;EAAA,GAQb;EACD,OAAOA,QAAQ;AACjB,CAAC,CAAC"},"metadata":{},"sourceType":"module"}