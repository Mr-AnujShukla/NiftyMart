{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { multiaddr } from '@multiformats/multiaddr';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport var createReset = configure(function (api) {\n  /**\n   * @type {BootstrapAPI[\"reset\"]}\n   */\n  function reset() {\n    return _reset.apply(this, arguments);\n  }\n  function _reset() {\n    _reset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n        res,\n        _yield$res$json,\n        Peers,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _context.next = 3;\n              return api.post('bootstrap/add', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread(_objectSpread({}, options), {}, {\n                  default: true\n                })),\n                headers: options.headers\n              });\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n            case 6:\n              _yield$res$json = _context.sent;\n              Peers = _yield$res$json.Peers;\n              return _context.abrupt(\"return\", {\n                Peers: Peers.map(function ( /** @type {string} */ma) {\n                  return multiaddr(ma);\n                })\n              });\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _reset.apply(this, arguments);\n  }\n  return reset;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","multiaddr","createReset","api","reset","options","post","signal","searchParams","default","headers","res","json","Peers","map","ma"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/ipfs-http-client/src/bootstrap/reset.js"],"sourcesContent":["import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createReset = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"reset\"]}\n   */\n  async function reset (options = {}) {\n    const res = await api.post('bootstrap/add', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        default: true\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => multiaddr(ma)) }\n  }\n\n  return reset\n})\n"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,SAAS,QAAQ,yBAAyB;;AAEnD;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,WAAW,GAAGH,SAAS,CAAC,UAAAI,GAAG,EAAI;EAC1C;AACF;AACA;EAFE,SAGeC,KAAK;IAAA;EAAA;EAAA;IAAA,oEAApB;MAAA;QAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cAAsBC,OAAO,2DAAG,CAAC,CAAC;cAAA;cAAA,OACdF,GAAG,CAACG,IAAI,CAAC,eAAe,EAAE;gBAC1CC,MAAM,EAAEF,OAAO,CAACE,MAAM;gBACtBC,YAAY,EAAER,iBAAiB,iCAC1BK,OAAO;kBACVI,OAAO,EAAE;gBAAI,GACb;gBACFC,OAAO,EAAEL,OAAO,CAACK;cACnB,CAAC,CAAC;YAAA;cAPIC,GAAG;cAAA;cAAA,OASeA,GAAG,CAACC,IAAI,EAAE;YAAA;cAAA;cAA1BC,KAAK,mBAALA,KAAK;cAAA,iCAEN;gBAAEA,KAAK,EAAEA,KAAK,CAACC,GAAG,CAAC,WAAC,qBAAsBC,EAAE;kBAAA,OAAKd,SAAS,CAACc,EAAE,CAAC;gBAAA;cAAE,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACzE;IAAA;EAAA;EAED,OAAOX,KAAK;AACd,CAAC,CAAC"},"metadata":{},"sourceType":"module"}