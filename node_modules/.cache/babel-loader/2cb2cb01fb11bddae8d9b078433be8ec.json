{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectWithoutProperties from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _awaitAsyncGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _asyncIterator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nvar _excluded = [\"timeout\", \"signal\", \"headers\"];\nimport { encodeQuery, decodePin } from './utils.js';\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createLs(client) {\n  /**\n   * @type {RemotePiningAPI[\"ls\"]}\n   */\n  function ls(_x) {\n    return _ls.apply(this, arguments);\n  }\n  function _ls() {\n    _ls = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref) {\n      var timeout, signal, headers, query, response, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, pin;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              timeout = _ref.timeout, signal = _ref.signal, headers = _ref.headers, query = _objectWithoutProperties(_ref, _excluded);\n              _context.next = 3;\n              return _awaitAsyncGenerator(client.post('pin/remote/ls', {\n                timeout: timeout,\n                signal: signal,\n                headers: headers,\n                searchParams: encodeQuery(query)\n              }));\n            case 3:\n              response = _context.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 6;\n              _iterator = _asyncIterator(response.ndjson());\n            case 8:\n              _context.next = 10;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 10:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 17;\n                break;\n              }\n              pin = _step.value;\n              _context.next = 14;\n              return decodePin(pin);\n            case 14:\n              _iteratorAbruptCompletion = false;\n              _context.next = 8;\n              break;\n            case 17:\n              _context.next = 23;\n              break;\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](6);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n            case 23:\n              _context.prev = 23;\n              _context.prev = 24;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 28;\n                break;\n              }\n              _context.next = 28;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 28:\n              _context.prev = 28;\n              if (!_didIteratorError) {\n                _context.next = 31;\n                break;\n              }\n              throw _iteratorError;\n            case 31:\n              return _context.finish(28);\n            case 32:\n              return _context.finish(23);\n            case 33:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 19, 23, 33], [24,, 28, 32]]);\n    }));\n    return _ls.apply(this, arguments);\n  }\n  return ls;\n}","map":{"version":3,"names":["encodeQuery","decodePin","createLs","client","ls","timeout","signal","headers","query","post","searchParams","response","ndjson","pin"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/ipfs-http-client/src/pin/remote/ls.js"],"sourcesContent":["import { encodeQuery, decodePin } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createLs (client) {\n  /**\n   * @type {RemotePiningAPI[\"ls\"]}\n   */\n  async function * ls ({ timeout, signal, headers, ...query }) {\n    const response = await client.post('pin/remote/ls', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery(query)\n    })\n\n    for await (const pin of response.ndjson()) {\n      yield decodePin(pin)\n    }\n  }\n\n  return ls\n}\n"],"mappings":";;;;;;AAAA,SAASA,WAAW,EAAEC,SAAS,QAAQ,YAAY;;AAEnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,SAASC,QAAQ,CAAEC,MAAM,EAAE;EAChC;AACF;AACA;EAFE,SAGiBC,EAAE;IAAA;EAAA;EAAA;IAAA,mEAAnB;MAAA;MAAA;QAAA;UAAA;YAAA;cAAuBC,OAAO,QAAPA,OAAO,EAAEC,MAAM,QAANA,MAAM,EAAEC,OAAO,QAAPA,OAAO,EAAKC,KAAK;cAAA;cAAA,4BAChCL,MAAM,CAACM,IAAI,CAAC,eAAe,EAAE;gBAClDJ,OAAO,EAAPA,OAAO;gBACPC,MAAM,EAANA,MAAM;gBACNC,OAAO,EAAPA,OAAO;gBACPG,YAAY,EAAEV,WAAW,CAACQ,KAAK;cACjC,CAAC,CAAC;YAAA;cALIG,QAAQ;cAAA;cAAA;cAAA;cAAA,2BAOUA,QAAQ,CAACC,MAAM,EAAE;YAAA;cAAA;cAAA;YAAA;cAAA;gBAAA;gBAAA;cAAA;cAAxBC,GAAG;cAAA;cAClB,OAAMZ,SAAS,CAACY,GAAG,CAAC;YAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;YAAA;cAAA;YAAA;cAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAEvB;IAAA;EAAA;EAED,OAAOT,EAAE;AACX"},"metadata":{},"sourceType":"module"}