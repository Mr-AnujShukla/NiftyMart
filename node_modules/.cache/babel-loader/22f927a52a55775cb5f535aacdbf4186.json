{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _asyncToGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _excluded = [\"timeout\", \"signal\", \"headers\"];\nimport { encodeAddParams, decodePin } from './utils.js';\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createAdd(client) {\n  /**\n   * @type {RemotePiningAPI[\"add\"]}\n   */\n  function add(_x, _x2) {\n    return _add.apply(this, arguments);\n  }\n  function _add() {\n    _add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(cid, _ref) {\n      var timeout, signal, headers, query, response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              timeout = _ref.timeout, signal = _ref.signal, headers = _ref.headers, query = _objectWithoutProperties(_ref, _excluded);\n              _context.next = 3;\n              return client.post('pin/remote/add', {\n                timeout: timeout,\n                signal: signal,\n                headers: headers,\n                searchParams: encodeAddParams(_objectSpread({\n                  cid: cid\n                }, query))\n              });\n            case 3:\n              response = _context.sent;\n              _context.t0 = decodePin;\n              _context.next = 7;\n              return response.json();\n            case 7:\n              _context.t1 = _context.sent;\n              return _context.abrupt(\"return\", (0, _context.t0)(_context.t1));\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _add.apply(this, arguments);\n  }\n  return add;\n}","map":{"version":3,"names":["encodeAddParams","decodePin","createAdd","client","add","cid","timeout","signal","headers","query","post","searchParams","response","json"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/ipfs-http-client/src/pin/remote/add.js"],"sourcesContent":["import { encodeAddParams, decodePin } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createAdd (client) {\n  /**\n   * @type {RemotePiningAPI[\"add\"]}\n   */\n  async function add (cid, { timeout, signal, headers, ...query }) {\n    const response = await client.post('pin/remote/add', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeAddParams({ cid, ...query })\n    })\n\n    return decodePin(await response.json())\n  }\n\n  return add\n}\n"],"mappings":";;;;;AAAA,SAASA,eAAe,EAAEC,SAAS,QAAQ,YAAY;;AAEvD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,SAASC,SAAS,CAAEC,MAAM,EAAE;EACjC;AACF;AACA;EAFE,SAGeC,GAAG;IAAA;EAAA;EAAA;IAAA,kEAAlB,iBAAoBC,GAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cAAIC,OAAO,QAAPA,OAAO,EAAEC,MAAM,QAANA,MAAM,EAAEC,OAAO,QAAPA,OAAO,EAAKC,KAAK;cAAA;cAAA,OACpCN,MAAM,CAACO,IAAI,CAAC,gBAAgB,EAAE;gBACnDJ,OAAO,EAAPA,OAAO;gBACPC,MAAM,EAANA,MAAM;gBACNC,OAAO,EAAPA,OAAO;gBACPG,YAAY,EAAEX,eAAe;kBAAGK,GAAG,EAAHA;gBAAG,GAAKI,KAAK;cAC/C,CAAC,CAAC;YAAA;cALIG,QAAQ;cAAA,cAOPX,SAAS;cAAA;cAAA,OAAOW,QAAQ,CAACC,IAAI,EAAE;YAAA;cAAA;cAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACvC;IAAA;EAAA;EAED,OAAOT,GAAG;AACZ"},"metadata":{},"sourceType":"module"}