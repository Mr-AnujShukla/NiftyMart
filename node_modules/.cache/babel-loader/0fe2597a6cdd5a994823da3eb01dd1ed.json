{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport var createGetAll = configure(function (api) {\n  /**\n   * @type {ConfigAPI[\"getAll\"]}\n   */\n  var getAll = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n        res,\n        data,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _context.next = 3;\n              return api.post('config/show', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({}, options)),\n                headers: options.headers\n              });\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n            case 6:\n              data = _context.sent;\n              return _context.abrupt(\"return\", data);\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function getAll() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return getAll;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","createGetAll","api","getAll","options","post","signal","searchParams","headers","res","json","data"],"sources":["C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/ipfs-http-client/src/config/get-all.js"],"sourcesContent":["import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport const createGetAll = configure(api => {\n  /**\n   * @type {ConfigAPI[\"getAll\"]}\n   */\n  const getAll = async (options = {}) => {\n    const res = await api.post('config/show', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data\n  }\n\n  return getAll\n})\n"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;;AAElE;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,YAAY,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;EAC3C;AACF;AACA;EACE,IAAMC,MAAM;IAAA,sEAAG;MAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cAAOC,OAAO,2DAAG,CAAC,CAAC;cAAA;cAAA,OACdF,GAAG,CAACG,IAAI,CAAC,aAAa,EAAE;gBACxCC,MAAM,EAAEF,OAAO,CAACE,MAAM;gBACtBC,YAAY,EAAEP,iBAAiB,mBAC1BI,OAAO,EACV;gBACFI,OAAO,EAAEJ,OAAO,CAACI;cACnB,CAAC,CAAC;YAAA;cANIC,GAAG;cAAA;cAAA,OAOUA,GAAG,CAACC,IAAI,EAAE;YAAA;cAAvBC,IAAI;cAAA,iCAEHA,IAAI;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACZ;IAAA,gBAXKR,MAAM;MAAA;IAAA;EAAA,GAWX;EAED,OAAOA,MAAM;AACf,CAAC,CAAC"},"metadata":{},"sourceType":"module"}