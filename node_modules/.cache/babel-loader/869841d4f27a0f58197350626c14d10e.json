{"ast":null,"code":"import _defineProperty from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"C:/Users/HP/Desktop/my_workspace/hackathon/NFT/Pixelate/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nexport default function peekableIterator(iterable) {\n  // @ts-expect-error\n  var _ref = iterable[Symbol.asyncIterator] != null\n    // @ts-expect-error\n    ? [iterable[Symbol.asyncIterator](), Symbol.asyncIterator]\n    // @ts-expect-error\n    : [iterable[Symbol.iterator](), Symbol.iterator],\n    _ref2 = _slicedToArray(_ref, 2),\n    iterator = _ref2[0],\n    symbol = _ref2[1];\n  var queue = [];\n  // @ts-expect-error\n  return _defineProperty({\n    peek: function peek() {\n      return iterator.next();\n    },\n    push: function push(value) {\n      queue.push(value);\n    },\n    next: function next() {\n      if (queue.length > 0) {\n        return {\n          done: false,\n          value: queue.shift()\n        };\n      }\n      return iterator.next();\n    }\n  }, symbol, function () {\n    return this;\n  });\n}","map":{"version":3,"mappings":";;AAiBA,eAAc,SAAUA,gBAAgB,CAA2CC,QAAW;EAK5F;EACA,WAA2BA,QAAQ,CAACC,MAAM,CAACC,aAAa,CAAC,IAAI;IAC3D;IAAA,EACE,CAACF,QAAQ,CAACC,MAAM,CAACC,aAAa,CAAC,EAAE,EAAED,MAAM,CAACC,aAAa;IACzD;IAAA,EACE,CAACF,QAAQ,CAACC,MAAM,CAACE,QAAQ,CAAC,EAAE,EAAEF,MAAM,CAACE,QAAQ,CAAC;IAAA;IAJ3CA,QAAQ;IAAEC,MAAM;EAMvB,IAAMC,KAAK,GAAU,EAAE;EAEvB;EACA;IACEC,IAAI,EAAE,gBAAK;MACT,OAAOH,QAAQ,CAACI,IAAI,EAAE;IACxB,CAAC;IACDC,IAAI,EAAE,cAACC,KAAU,EAAI;MACnBJ,KAAK,CAACG,IAAI,CAACC,KAAK,CAAC;IACnB,CAAC;IACDF,IAAI,EAAE,gBAAK;MACT,IAAIF,KAAK,CAACK,MAAM,GAAG,CAAC,EAAE;QACpB,OAAO;UACLC,IAAI,EAAE,KAAK;UACXF,KAAK,EAAEJ,KAAK,CAACO,KAAK;SACnB;;MAGH,OAAOT,QAAQ,CAACI,IAAI,EAAE;IACxB;EAAC,GACAH,MAAM,cAAC;IACN,OAAO,IAAI;EACb,CAAC;AAEL","names":["peekableIterator","iterable","Symbol","asyncIterator","iterator","symbol","queue","peek","next","push","value","length","done","shift"],"sources":["C:\\Users\\HP\\Desktop\\my_workspace\\hackathon\\NFT\\Pixelate\\node_modules\\it-peekable\\src\\index.ts"],"sourcesContent":["\ninterface Peek <T> {\n  peek: () => IteratorResult<T, undefined>\n}\n\ninterface AsyncPeek <T> {\n  peek: () => Promise<IteratorResult<T, undefined>>\n}\n\ninterface Push <T> {\n  push: (value: T) => void\n}\n\ntype Peekable <T> = Iterable<T> & Peek<T> & Push<T> & Iterator<T>\n\ntype AsyncPeekable <T> = AsyncIterable<T> & AsyncPeek<T> & Push<T> & AsyncIterator<T>\n\nexport default function peekableIterator <I = Iterable<any> | AsyncIterable<any>> (iterable: I): I extends Iterable<infer T>\n  ? Peekable<T>\n  : I extends AsyncIterable<infer T>\n    ? AsyncPeekable<T>\n    : never {\n  // @ts-expect-error\n  const [iterator, symbol] = iterable[Symbol.asyncIterator] != null\n    // @ts-expect-error\n    ? [iterable[Symbol.asyncIterator](), Symbol.asyncIterator]\n    // @ts-expect-error\n    : [iterable[Symbol.iterator](), Symbol.iterator]\n\n  const queue: any[] = []\n\n  // @ts-expect-error\n  return {\n    peek: () => {\n      return iterator.next()\n    },\n    push: (value: any) => {\n      queue.push(value)\n    },\n    next: () => {\n      if (queue.length > 0) {\n        return {\n          done: false,\n          value: queue.shift()\n        }\n      }\n\n      return iterator.next()\n    },\n    [symbol] () {\n      return this\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}